{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\client\\\\src\\\\Register.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Authentification.css\";\nimport { connect } from \"react-redux\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { Button, Input, InputAdornment, Grid, CircularProgress } from \"@material-ui/core\";\nimport { register } from \"./actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      fetch('/api/register', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error register!');\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      phone_number: \"\",\n      club_title: \"\",\n      password_confirmation: \"\",\n      registrationErrors: [],\n      componentState: \"\",\n      notrobot: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.testerApply = this.testerApply.bind(this);\n    this.developerRegister = this.developerRegister.bind(this);\n    this.RecaptchaHandle = this.RecaptchaHandle.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      registrationErrors: null,\n      componentState: \"developer\"\n    }, () => {\n      let spinner = document.getElementById(\"spinner\");\n      if (spinner) spinner.style.visibility = \"hidden\";\n    });\n  }\n\n  componentWillUpdate(nextProps, prevProps) {\n    if (nextProps.isAuthenticated) {\n      this.props.history.push(\"/developer\");\n    } else if (this.props.error !== prevProps.error) {\n      console.log(this.props.error);\n    }\n  }\n\n  getErrors() {\n    this.setState({\n      registrationErrors: this.props.error\n    });\n  }\n  /*\r\n  onSubmit(event) {\r\n    if(!this.state.notrobot){\r\n      this.setState({notrobot:false})\r\n    }\r\n    else{\r\n    event.preventDefault();\r\n    let spinner = document.getElementById(\"spinner\");\r\n    spinner.style.visibility = \"visible\";\r\n    const { username, email, password, password_confirmation } = this.state;\r\n      // Create user object\r\n    const newUser = {\r\n      username,\r\n      email,\r\n      password,\r\n      password_confirmation,\r\n    };\r\n      // Attempt to register\r\n    this.props.register(newUser);\r\n  }\r\n  }\r\n  */\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    let spinner = document.getElementById(\"spinner\");\n    if (spinner) spinner.style.visibility = \"hidden\";\n\n    if (this.props.error.msg !== prevProps.error.msg) {\n      if (this.props.error.id === \"REGISTER_FAIL\") {\n        this.setState({\n          registrationErrors: this.props.error.msg\n        }, () => {});\n      } else {\n        this.setState({\n          registrationErrors: null\n        });\n      }\n    }\n  }\n\n  testerApply() {\n    this.setState({\n      componentState: \"tester\"\n    }, () => {\n      let area = document.getElementById(\"area\");\n      let leftSide = document.getElementById(\"left-side\");\n      area.style.backgroundColor = \"#61B769\";\n      leftSide.style.backgroundColor = \"#74C07B\";\n    });\n  }\n\n  developerRegister() {\n    this.setState({\n      componentState: \"developer\"\n    }, () => {\n      let area = document.getElementById(\"area\");\n      let leftSide = document.getElementById(\"left-side\");\n      area.style.backgroundColor = \"#0D4D7B\";\n      leftSide.style.backgroundColor = \"#2A638B\";\n    });\n  }\n\n  RecaptchaHandle(value) {\n    if (value) this.setState({\n      notrobot: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"area\",\n      className: \"area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"circles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      id: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }), this.state.componentState === \"developer\" ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"right-side-developer\",\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"register-section\",\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      style: {\n        color: \"#abcedb\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, \"REGISTER\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"under-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"Execlusively for INSAT\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }, \" STUDENTS! \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"text-fields\",\n      type: \"text\",\n      name: \"username\",\n      label: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      id: \"input-with-icon-adornment\",\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        className: \"icon\",\n        style: {\n          color: \"#2A638B\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 31\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"text-fields\",\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      id: \"input-with-icon-adornment\",\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(EmailIcon, {\n        className: \"icon\",\n        style: {\n          color: \"#2A638B\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 31\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"text-fields\",\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      id: \"input-with-icon-adornment\",\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(LockOpenIcon, {\n        className: \"icon\",\n        style: {\n          color: \"#2A638B\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 31\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"text-fields\",\n      type: \"password\",\n      name: \"password_confirmation\",\n      label: \"Confirm Password\",\n      onChange: this.handleChange,\n      value: this.state.password_confirmation,\n      id: \"input-with-icon-adornment\",\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(LockIcon, {\n        className: \"icon\",\n        style: {\n          color: \"#2A638B\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 31\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }, \"Club Title\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"text-fields\",\n      type: \"text\",\n      name: \"club_title\",\n      label: \"club_title\",\n      value: this.state.club_title,\n      onChange: this.handleChange,\n      id: \"input-with-icon-adornment\",\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        className: \"icon\",\n        style: {\n          color: \"#2A638B\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 1\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n      className: \"text-fields\",\n      type: \"text\",\n      name: \"phone_number\",\n      label: \"phone_number\",\n      value: this.state.phone_number,\n      onChange: this.handleChange,\n      id: \"input-with-icon-adornment\",\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(EmailIcon, {\n        className: \"icon\",\n        style: {\n          color: \"#2A638B\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      size: \"large\",\n      style: {\n        paddingLeft: \"3rem\",\n        paddingRight: \"3rem\",\n        fontWeight: \"bold\",\n        color: \"#abcedb\"\n      },\n      onClick: () => this.props.history.push(\"/login\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, \"LOGIN\")), /*#__PURE__*/React.createElement(Grid, {\n      id: \"spinner\",\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      size: \"large\",\n      variant: \"contained\",\n      style: {\n        borderRadius: \"50px\",\n        paddingLeft: \"2rem\",\n        paddingRight: \"2rem\",\n        backgroundColor: \"#abcedb\",\n        fontWeight: \"bold\",\n        color: \"white\"\n      },\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }\n    }, \"REGISTER\"))), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      sitekey: \"6Lfv1_IUAAAAAFI70k-38JlJlPudFMJTF1qCqYuB\",\n      onChange: this.RecaptchaHandle,\n      render: \"explicit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 25\n      }\n    }))))) : null))));\n  }\n\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  register: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(withRouter(Register));","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/client/src/Register.jsx"],"names":["React","Component","withRouter","connect","EmailIcon","LockOpenIcon","LockIcon","Button","Input","InputAdornment","Grid","CircularProgress","register","PropTypes","AccountCircle","ReCAPTCHA","Register","constructor","props","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","state","headers","then","res","status","history","push","error","Error","catch","err","console","alert","username","email","password","phone_number","club_title","password_confirmation","registrationErrors","componentState","notrobot","bind","handleChange","testerApply","developerRegister","RecaptchaHandle","componentDidMount","setState","spinner","document","getElementById","style","visibility","componentWillUpdate","nextProps","prevProps","isAuthenticated","log","getErrors","target","name","value","componentDidUpdate","msg","id","area","leftSide","backgroundColor","render","height","width","color","fontWeight","paddingLeft","paddingRight","borderRadius","propTypes","bool","func","isRequired","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,wBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,cAHF,EAIEC,IAJF,EAKEC,gBALF,QAMO,mBANP;AAOA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,aAAP,MAA0B,kCAA1B;AAGA,OAAOC,SAAP,MAAsB,wBAAtB;;AACA,MAAMC,QAAN,SAAuBf,SAAvB,CAAiC;AAC/BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwEnBC,QAxEmB,GAwEPC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,CAFe;AAGrBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHY,OAAlB,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,SAFD,MAEO;AACL,gBAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUL,GAAG,CAACI,KAAd,CAAd;AACA,gBAAMA,KAAN;AACD;AACF,OAdD,EAeCE,KAfD,CAeOC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACJ,KAAR,CAAcG,GAAd;AACAE,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAlBD;AAmBD,KA7FkB;;AAEjB,SAAKZ,KAAL,GAAa;AACXa,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,UAAU,EAAG,EALF;AAMXC,MAAAA,qBAAqB,EAAE,EANZ;AAOXC,MAAAA,kBAAkB,EAAE,EAPT;AAQXC,MAAAA,cAAc,EAAE,EARL;AASXC,MAAAA,QAAQ,EAAC;AATE,KAAb;AAWA,SAAK7B,QAAL,GAAgB,KAAKA,QAAL,CAAc8B,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKI,eAAL,GAAqB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAArB;AACD;;AAMDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CACE;AACET,MAAAA,kBAAkB,EAAE,IADtB;AAEEC,MAAAA,cAAc,EAAE;AAFlB,KADF,EAKE,MAAM;AACJ,UAAIS,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACA,UAAIF,OAAJ,EAAaA,OAAO,CAACG,KAAR,CAAcC,UAAd,GAA2B,QAA3B;AACd,KARH;AAUD;;AACDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAID,SAAS,CAACE,eAAd,EAA+B;AAC7B,WAAK9C,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,KAFD,MAEO,IAAI,KAAKf,KAAL,CAAWgB,KAAX,KAAqB6B,SAAS,CAAC7B,KAAnC,EAA0C;AAC/CI,MAAAA,OAAO,CAAC2B,GAAR,CAAY,KAAK/C,KAAL,CAAWgB,KAAvB;AACD;AACF;;AACDgC,EAAAA,SAAS,GAAG;AACV,SAAKX,QAAL,CAAc;AACZT,MAAAA,kBAAkB,EAAE,KAAK5B,KAAL,CAAWgB;AADnB,KAAd;AAGD;AACD;;;;;;;;;;;;;;;;;;;;;;;;AAkDAgB,EAAAA,YAAY,CAAC9B,KAAD,EAAQ;AAClB,SAAKmC,QAAL,CAAc;AACZ,OAACnC,KAAK,CAAC+C,MAAN,CAAaC,IAAd,GAAqBhD,KAAK,CAAC+C,MAAN,CAAaE;AADtB,KAAd;AAGD;;AAEDC,EAAAA,kBAAkB,CAACP,SAAD,EAAY;AAC5B,QAAIP,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AACA,QAAIF,OAAJ,EAAaA,OAAO,CAACG,KAAR,CAAcC,UAAd,GAA2B,QAA3B;;AACb,QAAI,KAAK1C,KAAL,CAAWgB,KAAX,CAAiBqC,GAAjB,KAAyBR,SAAS,CAAC7B,KAAV,CAAgBqC,GAA7C,EAAkD;AAChD,UAAI,KAAKrD,KAAL,CAAWgB,KAAX,CAAiBsC,EAAjB,KAAwB,eAA5B,EAA6C;AAC3C,aAAKjB,QAAL,CAAc;AAAET,UAAAA,kBAAkB,EAAE,KAAK5B,KAAL,CAAWgB,KAAX,CAAiBqC;AAAvC,SAAd,EAA4D,MAAM,CAAE,CAApE;AACD,OAFD,MAEO;AACL,aAAKhB,QAAL,CAAc;AAAET,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACD;AACF;AACF;;AACDK,EAAAA,WAAW,GAAG;AACZ,SAAKI,QAAL,CACE;AACER,MAAAA,cAAc,EAAE;AADlB,KADF,EAIE,MAAM;AACJ,UAAI0B,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AACA,UAAIgB,QAAQ,GAAGjB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAf;AACAe,MAAAA,IAAI,CAACd,KAAL,CAAWgB,eAAX,GAA6B,SAA7B;AACAD,MAAAA,QAAQ,CAACf,KAAT,CAAegB,eAAf,GAAiC,SAAjC;AACD,KATH;AAWD;;AACDvB,EAAAA,iBAAiB,GAAG;AAClB,SAAKG,QAAL,CACE;AACER,MAAAA,cAAc,EAAE;AADlB,KADF,EAIE,MAAM;AACJ,UAAI0B,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AACA,UAAIgB,QAAQ,GAAGjB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAf;AACAe,MAAAA,IAAI,CAACd,KAAL,CAAWgB,eAAX,GAA6B,SAA7B;AACAD,MAAAA,QAAQ,CAACf,KAAT,CAAegB,eAAf,GAAiC,SAAjC;AACD,KATH;AAWD;;AAEDtB,EAAAA,eAAe,CAACgB,KAAD,EAAO;AACpB,QAAGA,KAAH,EACE,KAAKd,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAC;AAAV,KAAd;AACH;;AACD4B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,eAcE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKjD,KAAL,CAAWoB,cAAX,KAA8B,WAA9B,gBACC;AAAK,MAAA,EAAE,EAAC,sBAAR;AAA+B,MAAA,SAAS,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAK5B,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,KAAK,EAAE;AAAE0D,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAG;AAAT,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CARF,eAaE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAeE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,KAAK,EAAE,KAAKrD,KAAL,CAAWa,QALpB;AAME,MAAA,QAAQ,EAAE,KAAKU,YANjB;AAOE,MAAA,EAAE,EAAC,2BAPL;AAQE,MAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgCE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhCF,eAiCE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,KAAK,EAAE,KAAKpD,KAAL,CAAWc,KALpB;AAME,MAAA,QAAQ,EAAE,KAAKS,YANjB;AAOE,MAAA,EAAE,EAAC,2BAPL;AAQE,MAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,eAkDE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlDF,eAmDE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,UAJR;AAKE,MAAA,KAAK,EAAE,KAAKpD,KAAL,CAAWe,QALpB;AAME,MAAA,QAAQ,EAAE,KAAKQ,YANjB;AAOE,MAAA,EAAE,EAAC,2BAPL;AAQE,MAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,eAqEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BArEF,eAuEE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,uBAHP;AAIE,MAAA,KAAK,EAAC,kBAJR;AAKE,MAAA,QAAQ,EAAE,KAAK7B,YALjB;AAME,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWkB,qBANpB;AAOE,MAAA,EAAE,EAAC,2BAPL;AAQE,MAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAEkC,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvEF,CAFF,eA8FE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9FF,eAgGpB,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,KAAK,EAAC,YAJR;AAKE,MAAA,KAAK,EAAE,KAAKpD,KAAL,CAAWiB,UALpB;AAME,MAAA,QAAQ,EAAE,KAAKM,YANjB;AAOE,MAAA,EAAE,EAAC,2BAPL;AAQE,MAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhGoB,eAkHpB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlHoB,eAoHpB,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,KAAK,EAAC,cAJR;AAKE,MAAA,KAAK,EAAE,KAAKpD,KAAL,CAAWgB,YALpB;AAME,MAAA,QAAQ,EAAE,KAAKO,YANjB;AAOE,MAAA,EAAE,EAAC,2BAPL;AAQE,MAAA,cAAc,eACZ,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApHoB,eAuIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE;AACLE,QAAAA,WAAW,EAAE,MADR;AAELC,QAAAA,YAAY,EAAE,MAFT;AAGLF,QAAAA,UAAU,EAAE,MAHP;AAILD,QAAAA,KAAK,EAAE;AAJF,OAHT;AASE,MAAA,OAAO,EAAE,MACP,KAAK7D,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAkBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,IAAI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,eAqBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,KAAK,EAAE;AACLkD,QAAAA,YAAY,EAAE,MADT;AAELF,QAAAA,WAAW,EAAE,MAFR;AAGLC,QAAAA,YAAY,EAAE,MAHT;AAILP,QAAAA,eAAe,EAAE,SAJZ;AAKLK,QAAAA,UAAU,EAAE,MALP;AAMLD,QAAAA,KAAK,EAAE;AANF,OAJT;AAYE,MAAA,OAAO,EAAE,KAAK5D,QAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CArBF,CADF,eAyCE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,0CADV;AAEE,MAAA,QAAQ,EAAE,KAAKkC,eAFjB;AAGE,MAAA,MAAM,EAAC,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,CAvIF,CADF,CADF,CADD,GA4LG,IAjMN,CADF,CAFF,CAdF,CADF;AA0ND;;AA9W8B;;AAA3BrC,Q,CAoBGoE,S,GAAY;AACjBpB,EAAAA,eAAe,EAAEnD,SAAS,CAACwE,IADV;AAEjBzE,EAAAA,QAAQ,EAAEC,SAAS,CAACyE,IAAV,CAAeC;AAFR,C;;AA4VrB,MAAMC,eAAe,GAAI7D,KAAD,KAAY;AAClCqC,EAAAA,eAAe,EAAErC,KAAK,CAAC8D,IAAN,CAAWzB,eADM;AAElC9B,EAAAA,KAAK,EAAEP,KAAK,CAACO;AAFqB,CAAZ,CAAxB;;AAKA,eAAe/B,OAAO,CAACqF,eAAD,EAAkB;AAAE5E,EAAAA;AAAF,CAAlB,CAAP,CAAuCV,UAAU,CAACc,QAAD,CAAjD,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Authentification.css\";\r\nimport { connect } from \"react-redux\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  InputAdornment,\r\n  Grid,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { register } from \"./actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\n\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone_number: \"\",\r\n      club_title : \"\",\r\n      password_confirmation: \"\",\r\n      registrationErrors: [],\r\n      componentState: \"\",\r\n      notrobot:\"\"\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.testerApply = this.testerApply.bind(this);\r\n    this.developerRegister = this.developerRegister.bind(this);\r\n    this.RecaptchaHandle=this.RecaptchaHandle.bind(this);\r\n  }\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    register: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState(\r\n      {\r\n        registrationErrors: null,\r\n        componentState: \"developer\",\r\n      },\r\n      () => {\r\n        let spinner = document.getElementById(\"spinner\");\r\n        if (spinner) spinner.style.visibility = \"hidden\";\r\n      }\r\n    );\r\n  }\r\n  componentWillUpdate(nextProps, prevProps) {\r\n    if (nextProps.isAuthenticated) {\r\n      this.props.history.push(\"/developer\");\r\n    } else if (this.props.error !== prevProps.error) {\r\n      console.log(this.props.error);\r\n    }\r\n  }\r\n  getErrors() {\r\n    this.setState({\r\n      registrationErrors: this.props.error,\r\n    });\r\n  }\r\n  /*\r\n  onSubmit(event) {\r\n    if(!this.state.notrobot){\r\n      this.setState({notrobot:false})\r\n    }\r\n    else{\r\n    event.preventDefault();\r\n    let spinner = document.getElementById(\"spinner\");\r\n    spinner.style.visibility = \"visible\";\r\n    const { username, email, password, password_confirmation } = this.state;\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      username,\r\n      email,\r\n      password,\r\n      password_confirmation,\r\n    };\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser);\r\n  }\r\n  }\r\n*/\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch('/api/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        this.props.history.push('/');\r\n      } else {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n      alert('Error register!');\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let spinner = document.getElementById(\"spinner\");\r\n    if (spinner) spinner.style.visibility = \"hidden\";\r\n    if (this.props.error.msg !== prevProps.error.msg) {\r\n      if (this.props.error.id === \"REGISTER_FAIL\") {\r\n        this.setState({ registrationErrors: this.props.error.msg }, () => {});\r\n      } else {\r\n        this.setState({ registrationErrors: null });\r\n      }\r\n    }\r\n  }\r\n  testerApply() {\r\n    this.setState(\r\n      {\r\n        componentState: \"tester\",\r\n      },\r\n      () => {\r\n        let area = document.getElementById(\"area\");\r\n        let leftSide = document.getElementById(\"left-side\");\r\n        area.style.backgroundColor = \"#61B769\";\r\n        leftSide.style.backgroundColor = \"#74C07B\";\r\n      }\r\n    );\r\n  }\r\n  developerRegister() {\r\n    this.setState(\r\n      {\r\n        componentState: \"developer\",\r\n      },\r\n      () => {\r\n        let area = document.getElementById(\"area\");\r\n        let leftSide = document.getElementById(\"left-side\");\r\n        area.style.backgroundColor = \"#0D4D7B\";\r\n        leftSide.style.backgroundColor = \"#2A638B\";\r\n      }\r\n    );\r\n  }\r\n\r\n  RecaptchaHandle(value){\r\n    if(value)\r\n      this.setState({notrobot:true})\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"area\" className=\"area\">\r\n        <ul className=\"circles\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n\r\n        <div className=\"outer\">\r\n  \r\n          <div className=\"middle\">\r\n            <div className=\"inner-login\">\r\n              <div className=\"left-side\" id=\"left-side\">\r\n              \r\n                \r\n              </div>\r\n              {this.state.componentState === \"developer\" ? (\r\n                <div id=\"right-side-developer\" className=\"right-side\">\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"centered\">\r\n                      \r\n                      <div\r\n                        id=\"register-section\"\r\n                        style={{ height: \"100%\", width: \"100%\" }}\r\n                      >\r\n                        <div className=\"title\" style={{color : \"#abcedb\"}}>\r\n                        REGISTER\r\n                        </div>\r\n\r\n                        <div className=\"under-title\">\r\n                          Execlusively for INSAT\r\n                          <span style={{ fontWeight: \"bold\" }}> STUDENTS! </span>\r\n                        </div>\r\n                    \r\n                        <div className=\"label\">Username</div>\r\n\r\n                        <Input\r\n                          className=\"text-fields\"\r\n                          type=\"text\"\r\n                          name=\"username\"\r\n                          label=\"username\"\r\n                          value={this.state.username}\r\n                          onChange={this.handleChange}\r\n                          id=\"input-with-icon-adornment\"\r\n                          startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                              <AccountCircle\r\n                                className=\"icon\"\r\n                                style={{ color: \"#2A638B\" }}\r\n                              />\r\n                            </InputAdornment>\r\n                          }\r\n                        />\r\n                        <div className=\"label\">Email</div>\r\n                        <Input\r\n                          className=\"text-fields\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                          id=\"input-with-icon-adornment\"\r\n                          startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                              <EmailIcon\r\n                                className=\"icon\"\r\n                                style={{ color: \"#2A638B\" }}\r\n                              />\r\n                            </InputAdornment>\r\n                          }\r\n                        />\r\n                        <div className=\"label\">Password</div>\r\n                        <Input\r\n                          className=\"text-fields\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          label=\"Password\"\r\n                          value={this.state.password}\r\n                          onChange={this.handleChange}\r\n                          id=\"input-with-icon-adornment\"\r\n                          startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                              <LockOpenIcon\r\n                                className=\"icon\"\r\n                                style={{ color: \"#2A638B\" }}\r\n                              />\r\n                            </InputAdornment>\r\n                          }\r\n                        />\r\n\r\n                        <div className=\"label\">Confirm Password</div>\r\n\r\n                        <Input\r\n                          className=\"text-fields\"\r\n                          type=\"password\"\r\n                          name=\"password_confirmation\"\r\n                          label=\"Confirm Password\"\r\n                          onChange={this.handleChange}\r\n                          value={this.state.password_confirmation}\r\n                          id=\"input-with-icon-adornment\"\r\n                          startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                              <LockIcon\r\n                                className=\"icon\"\r\n                                style={{ color: \"#2A638B\" }}\r\n                              />\r\n                            </InputAdornment>\r\n                          }\r\n                        />\r\n                      </div>\r\n                  \r\n\r\n\r\n                      <div className=\"label\">Club Title</div>\r\n\r\n<Input\r\n  className=\"text-fields\"\r\n  type=\"text\"\r\n  name=\"club_title\"\r\n  label=\"club_title\"\r\n  value={this.state.club_title}\r\n  onChange={this.handleChange}\r\n  id=\"input-with-icon-adornment\"\r\n  startAdornment={\r\n    <InputAdornment position=\"start\">\r\n      <AccountCircle\r\n        className=\"icon\"\r\n        style={{ color: \"#2A638B\" }}\r\n      />\r\n    </InputAdornment>\r\n  }\r\n/>\r\n\r\n<div className=\"label\">Phone Number</div>\r\n\r\n<Input\r\n  className=\"text-fields\"\r\n  type=\"text\"\r\n  name=\"phone_number\"\r\n  label=\"phone_number\"\r\n  value={this.state.phone_number}\r\n  onChange={this.handleChange}\r\n  id=\"input-with-icon-adornment\"\r\n  startAdornment={\r\n    <InputAdornment position=\"start\">\r\n      <EmailIcon\r\n        className=\"icon\"\r\n        style={{ color: \"#2A638B\" }}\r\n      />\r\n    </InputAdornment>\r\n  }\r\n/>\r\n\r\n\r\n                      <div className=\"buttons\">\r\n                        <Grid container>\r\n                          <Grid item>\r\n                            <Button\r\n                              className=\"button\"\r\n                              size=\"large\"\r\n                              style={{\r\n                                paddingLeft: \"3rem\",\r\n                                paddingRight: \"3rem\",\r\n                                fontWeight: \"bold\",\r\n                                color: \"#abcedb\",\r\n                              }}\r\n                              onClick={() =>\r\n                                this.props.history.push(\"/login\")\r\n                              }\r\n                            >\r\n                              LOGIN\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid id=\"spinner\" item>\r\n                            <CircularProgress />\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Button\r\n                              className=\"button\"\r\n                              size=\"large\"\r\n                              variant=\"contained\"\r\n                              style={{\r\n                                borderRadius: \"50px\",\r\n                                paddingLeft: \"2rem\",\r\n                                paddingRight: \"2rem\",\r\n                                backgroundColor: \"#abcedb\",\r\n                                fontWeight: \"bold\",\r\n                                color: \"white\",\r\n                              }}\r\n                              onClick={this.onSubmit}\r\n                            >\r\n                              REGISTER\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <ReCAPTCHA\r\n                          sitekey=\"6Lfv1_IUAAAAAFI70k-38JlJlPudFMJTF1qCqYuB\"\r\n                          onChange={this.RecaptchaHandle}\r\n                          render=\"explicit\"\r\n                          />\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : null}\r\n        \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(withRouter(Register));\r\n"]},"metadata":{},"sourceType":"module"}