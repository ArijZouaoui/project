{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\src\\\\components\\\\eventPage\\\\commentForm.jsx\";\nimport React, { Component } from \"react\";\nexport default class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({ ...this.state,\n        comment: { ...this.state.comment,\n          [name]: value\n        }\n      });\n    };\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      comment: {\n        name: \"\",\n        message: \"\"\n      }\n    }; // bind context to methods\n\n    this.handleFieldChange = this.handleFieldChange.bind(this); // this.onSubmit = this.onSubmit.bind(this);\n  }\n  /**\r\n   * Handle form input field changes & update the state\r\n   */\n\n\n  /**\r\n   * Form submit handler\r\n   */\n\n  /* onSubmit(e) {\r\n     // prevent default form submission\r\n     e.preventDefault();\r\n  \n     if (!this.isFormValid()) {\r\n       this.setState({ error: \"All fields are required.\" });\r\n       return;\r\n     }\r\n  \n     // loading status and clear error\r\n     this.setState({ error: \"\", loading: true });\r\n  \n     // persist the comments on server\r\n     let { comment } = this.state;\r\n     fetch(\"http://localhost:7777\", {\r\n       method: \"post\",\r\n       body: JSON.stringify(comment)\r\n     })\r\n       .then(res => res.json())\r\n       .then(res => {\r\n         if (res.error) {\r\n           this.setState({ loading: false, error: res.error });\r\n         } else {\r\n           // add time return from api and push comment to parent state\r\n           comment.time = res.time;\r\n           this.props.addComment(comment);\r\n  \n           // clear the message box\r\n           this.setState({\r\n             loading: false,\r\n             comment: { ...comment, message: \"\" }\r\n           });\r\n         }\r\n       })\r\n       .catch(err => {\r\n         this.setState({\r\n           error: \"Something went wrong while submitting form.\",\r\n           loading: false\r\n         });\r\n       });\r\n   }\r\n  */\n\n  /**\r\n   * Simple validation\r\n   */\n  isFormValid() {\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\n  }\n\n  renderError() {\n    return this.state.error ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, this.state.error) : null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\" //onSubmit={this.onSubmit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleFieldChange,\n      value: this.state.comment.name,\n      className: \"form-control \",\n      placeholder: \"\\uD83D\\uDE0E Your Name\",\n      name: \"name\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleFieldChange,\n      value: this.state.comment.message,\n      className: \"form-control\",\n      placeholder: \"\\uD83E\\uDD2C Your Comment\",\n      name: \"message\",\n      rows: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })), this.renderError(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: this.state.loading,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Comment \\u27A4\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/src/components/eventPage/commentForm.jsx"],"names":["React","Component","CommentForm","constructor","props","handleFieldChange","event","value","name","target","setState","state","comment","loading","error","message","bind","isFormValid","renderError","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: \"\",\r\n\r\n      comment: {\r\n        name: \"\",\r\n        message: \"\"\r\n      }\r\n    };\r\n\r\n    // bind context to methods\r\n    this.handleFieldChange = this.handleFieldChange.bind(this);\r\n   // this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Handle form input field changes & update the state\r\n   */\r\n  handleFieldChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      comment: {\r\n        ...this.state.comment,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Form submit handler\r\n   */\r\n /* onSubmit(e) {\r\n    // prevent default form submission\r\n    e.preventDefault();\r\n\r\n    if (!this.isFormValid()) {\r\n      this.setState({ error: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    // loading status and clear error\r\n    this.setState({ error: \"\", loading: true });\r\n\r\n    // persist the comments on server\r\n    let { comment } = this.state;\r\n    fetch(\"http://localhost:7777\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(comment)\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          this.setState({ loading: false, error: res.error });\r\n        } else {\r\n          // add time return from api and push comment to parent state\r\n          comment.time = res.time;\r\n          this.props.addComment(comment);\r\n\r\n          // clear the message box\r\n          this.setState({\r\n            loading: false,\r\n            comment: { ...comment, message: \"\" }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: \"Something went wrong while submitting form.\",\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n*/\r\n  /**\r\n   * Simple validation\r\n   */\r\n  isFormValid() {\r\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\r\n  }\r\n\r\n  renderError() {\r\n    return this.state.error ? (\r\n      <div className=\"alert alert-danger\">{this.state.error}</div>\r\n    ) : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form method=\"post\"\r\n         //onSubmit={this.onSubmit}\r\n         >\r\n          <div className=\"form-group \">\r\n            <input\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.name}\r\n              className=\"form-control \"\r\n              placeholder=\"😎 Your Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.message}\r\n              className=\"form-control\"\r\n              placeholder=\"🤬 Your Comment\"\r\n              name=\"message\"\r\n              rows=\"5\"\r\n            />\r\n          </div>\r\n\r\n          {this.renderError()}\r\n\r\n          <div className=\"form-group\">\r\n            <button disabled={this.state.loading} className=\"btn btn-success\">\r\n              Comment &#10148;\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}