{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\src\\\\components\\\\calendar.jsx\";\nimport React, { Component } from 'react';\nimport './styling.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport PopUp from './popup';\nimport { faCoffee, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Dialog from 'react-bootstrap-dialog';\nimport { Button, Modal } from 'react-bootstrap';\nexport default class TheCalendar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      appointments: [{\n        title: 'event 1',\n        start: '2020-04-01',\n        end: '2020-04-02',\n        rendering: 'background'\n      }, {\n        title: 'event 2',\n        date: '2020-04-02'\n      }],\n      seen: false\n    };\n\n    this.handleDateClick = arg => {// bind with an arrow function\n    };\n\n    this.handleDragStop = () => {\n      this.dialog.show({\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.handleEventClick = ({\n      event\n    }) => {\n      // openAppointment is a function I wrote to open a form to edit that appointment\n      // this.props.openAppointment(event.extendedProps)\n      this.dialog.showAlert('Hello Dialog!');\n    };\n\n    this.handleEventClick = this.handleEventClick.bind(this);\n  }\n\n  formatEvents() {\n    return this.state.appointments.map(appointment => {\n      const {\n        title,\n        end,\n        start\n      } = appointment;\n      let startTime = new Date(start);\n      let endTime = new Date(end);\n      return {\n        title,\n        start: startTime,\n        end: endTime,\n        extendedProps: { ...appointment\n        }\n      };\n    });\n  }\n\n  /*  handleEventDrop = (info) => {\r\n            if(window.confirm(\"Are you sure you want to change the event date?\")){\r\n                console.log('change confirmed')\r\n    \r\n                // updateAppointment is another custom method\r\n                this.props.updateAppointment({...info.event.extendedProps, start: info.event.start, end: info.event.end})\r\n    \r\n            } else {\r\n                console.log('change aborted')\r\n            }\r\n       }*/\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      dateClick: this.handleDateClick,\n      plugins: [dayGridPlugin, interactionPlugin, bootstrapPlugin],\n      weekends: false,\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      eventDragStop: this.handleDragStop //  eventDrop={this.handleEventDrop}\n      ,\n      eventClick: this.handleEventClick,\n      select: this.handleEventClick,\n      dateClick: this.handleEventClick,\n      events: this.formatEvents(),\n      slotWidth: 60,\n      eventColor: \"#378006\",\n      eventBackgroundColor: \"white\",\n      eventBorderColor: \"black\",\n      eventTextColor: \"red\",\n      customButtons: {\n        myCustomButton: {\n          text: 'Add new event ',\n          click: function () {\n            alert('clicked the custom button!');\n          }\n        }\n      },\n      header: {\n        right: 'prev,next today ',\n        center: 'title',\n        left: 'myCustomButton,timeGridWeek,timeGridDay,listWeek'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"modal-dialog modal-dialog-centered\",\n      ref: component => {\n        this.dialog = component;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      class: \"form-text text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputPassword1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"exampleInputPassword1\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      id: \"exampleCheck1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"form-check-label\",\n      for: \"exampleCheck1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, \"Check me out\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 3\n      }\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/src/components/calendar.jsx"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","bootstrapPlugin","PopUp","faCoffee","faSearch","Dialog","Button","Modal","TheCalendar","constructor","state","appointments","title","start","end","rendering","date","seen","handleDateClick","arg","handleDragStop","dialog","show","bsSize","onHide","hide","console","log","handleEventClick","event","showAlert","bind","formatEvents","map","appointment","startTime","Date","endTime","extendedProps","render","myCustomButton","text","click","alert","right","center","left","component"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './styling.css';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport PopUp from './popup';\r\nimport { faCoffee, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport {Button,Modal} from 'react-bootstrap';\r\n\r\nexport default class TheCalendar extends React.Component {\r\n    constructor () {\r\n        super()\r\n        this.handleEventClick = this.handleEventClick.bind(this)\r\n      }\r\n    state={\r\n       \r\n        appointments:[\r\n            { title: 'event 1', start: '2020-04-01', end:'2020-04-02' ,rendering: 'background'},\r\n            { title: 'event 2', date: '2020-04-02' }\r\n          ],\r\n          seen: false\r\n    }\r\n    \r\n\r\n\r\n    handleDateClick = (arg) => { // bind with an arrow function\r\n       \r\n      }\r\n      formatEvents() {\r\n        return this.state.appointments.map(appointment => {\r\n                  const {title, end, start} = appointment\r\n      \r\n                  let startTime = new Date(start)\r\n                  let endTime = new Date(end)\r\n      \r\n                  return {\r\n                    title, \r\n                    start: startTime,\r\n                    end: endTime, \r\n                    extendedProps: {...appointment}\r\n                  }\r\n              })\r\n      }\r\n      handleDragStop=()=>{\r\n        this.dialog.show({\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n              dialog.hide()\r\n              console.log('closed by clicking background.')\r\n            }\r\n          })\r\n\r\n      }\r\n      handleEventClick= ({event}) => {\r\n        // openAppointment is a function I wrote to open a form to edit that appointment\r\n       // this.props.openAppointment(event.extendedProps)\r\n       this.dialog.showAlert('Hello Dialog!')}\r\n    \r\n  /*  handleEventDrop = (info) => {\r\n            if(window.confirm(\"Are you sure you want to change the event date?\")){\r\n                console.log('change confirmed')\r\n    \r\n                // updateAppointment is another custom method\r\n                this.props.updateAppointment({...info.event.extendedProps, start: info.event.start, end: info.event.end})\r\n    \r\n            } else {\r\n                console.log('change aborted')\r\n            }\r\n       }*/\r\n  render() {\r\n      \r\n    return (\r\n    <div className='jumbotron'>\r\n              <FullCalendar dateClick={this.handleDateClick} \r\n              plugins={[ dayGridPlugin, interactionPlugin,bootstrapPlugin ]}\r\n               weekends={false}\r\n                editable={true}\r\n                selectable={true}\r\n                selectMirror={true}\r\n                eventDragStop={this.handleDragStop}\r\n              //  eventDrop={this.handleEventDrop}\r\n                eventClick={this.handleEventClick}\r\n                select={this.handleEventClick}\r\n                dateClick={this.handleEventClick}\r\n                events={this.formatEvents()}\r\n                slotWidth={60}\r\n                eventColor= '#378006'\r\n                eventBackgroundColor='white'\r\n                eventBorderColor=\"black\"\r\n                eventTextColor='red'\r\n                customButtons={{\r\n                  myCustomButton: {\r\n                      text: 'Add new event ',\r\n                      click: function() {\r\n                          alert('clicked the custom button!');\r\n                      },\r\n                  },\r\n              }}\r\n              header={{\r\n                  right:  'prev,next today ',\r\n                  center: 'title',\r\n                  left:'myCustomButton,timeGridWeek,timeGridDay,listWeek'\r\n              }}\r\n             \r\n                \r\n              />\r\n              <Dialog className=\"modal-dialog modal-dialog-centered\"\r\n              ref={(component) => { this.dialog = component }} >\r\n              <form>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n  </div>\r\n  <div class=\"form-group form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"/>\r\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n              \r\n               {/*   <Input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          onChange={this.updateState}\r\n          value={this.state.username}\r\n          onBlur={this.validateFormField}\r\n          error={this.state.errors.username}\r\n        /> */}</Dialog>\r\n              </div>\r\n\r\n\r\n)\r\n  }\r\n}\r\n\r\n    \r\n"]},"metadata":{},"sourceType":"module"}