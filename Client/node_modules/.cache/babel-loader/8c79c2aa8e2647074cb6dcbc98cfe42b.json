{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\client\\\\src\\\\components\\\\homeCalendar.jsx\";\nimport React, { Component } from 'react';\nimport './styling.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport Dialog from 'react-bootstrap-dialog';\nimport RenderBody from './renderBody';\nimport axios from 'axios';\nimport { getEvents } from \"../eventData\";\nimport { getCategories } from \"../categoriesData\";\nimport img from '../assets/event_parallax.jpg';\nexport default class HomeCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newStart: [],\n      addModalChangeShow: false,\n      addModalShow: false,\n      modal: false,\n      requiredItem: 0,\n      events: [],\n      categories: [],\n      seen: false\n    };\n\n    this.handleClick = eventClickInfo => {\n      this.dialog.show({\n        // title:\" title\",\n        body: 'You want to add an event ?',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('Yes', () => {\n          this.setState({\n            addModalShow: true\n          });\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleDragStop = () => {\n      this.dialog.show({\n        // title:\" title\",\n        body: 'The date will be changed ',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('OK', () => {\n          console.log('do stuff');\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.changeTitle = () => {\n      let events = [...this.state.events];\n      events[0].title = new Date().toTimeString();\n      events[1].title = new Date().toTimeString();\n      this.setState({\n        events\n      });\n    };\n\n    this.handleDrop = () => {\n      let events = [...this.state.events];\n    };\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  replaceModalItem(info) {\n    this.setState({\n      requiredItem: this.state.events.indexOf(info.event)\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempevents = this.state.events;\n    tempevents[requiredItem] = item;\n    this.setState({\n      events: tempevents\n    });\n  }\n\n  deleteItem(index) {\n    let tempevents = this.state.events;\n    tempevents.splice(index, 1);\n    this.setState({\n      events: tempevents\n    });\n  }\n\n  componentDidMount() {\n    // this.setState({events: getEvents(), categories: getCategories()});\n    this.setState({\n      categories: getCategories()\n    });\n    axios.get('http://localhost:5000/events/').then(response => {\n      this.setState({\n        events: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  formatEvents() {\n    return this.state.events.map(event => {\n      const {\n        title,\n        end,\n        start\n      } = event;\n      let startTime = new Date(start);\n      let endTime = new Date(end);\n      return {\n        title,\n        start: startTime,\n        end: endTime,\n        extendedProps: { ...event\n        }\n      };\n    });\n  }\n\n  formatDate(string) {\n    var options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(string).toLocaleDateString([], options);\n  }\n\n  formatEvents() {\n    return this.state.events.map(event => {\n      const {\n        title,\n        end,\n        start\n      } = event;\n      let startTime = new Date(start);\n      let endTime = new Date(end);\n      return {\n        title,\n        start: startTime,\n        end: endTime,\n        extendedProps: { ...event\n        }\n      };\n    });\n  }\n\n  render() {\n    let {\n      title,\n      start,\n      end,\n      events,\n      newStart\n    } = this.state;\n\n    var dateFormat = require('dateformat');\n\n    const requiredItem = this.state.requiredItem;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parallax\",\n      id: \"thirdparallax\",\n      style: {\n        backgroundImage: `url(${img})`,\n        backgroundAttachment: 'fixed',\n        backgroundSize: 'cover',\n        textAlign: 'center',\n        maxHeight: '100vh',\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"layer_calendar\",\n      style: {\n        margin: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '80vh',\n        backgroundColor: 'white',\n        margin: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      dateClick: this.handleDateClick,\n      plugins: [dayGridPlugin, interactionPlugin, bootstrapPlugin],\n      height: \"parent\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      slotWidth: 60,\n      eventColor: \"white\",\n      eventBackgroundColor: \"#faf1e6\",\n      eventBorderColor: \"#faf1e6\",\n      eventTextColor: \"black\",\n      events: this.formatEvents(),\n      header: {\n        right: 'prev,next today ',\n        center: 'title',\n        left: 'myCustomButton,timeGridWeek,timeGridDay,listWeek'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/client/src/components/homeCalendar.jsx"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","bootstrapPlugin","Dialog","RenderBody","axios","getEvents","getCategories","img","HomeCalendar","constructor","props","state","newStart","addModalChangeShow","addModalShow","modal","requiredItem","events","categories","seen","handleClick","eventClickInfo","dialog","show","body","actions","CancelAction","DefaultAction","setState","bsSize","onHide","hide","console","log","toggle","handleDragStop","changeTitle","title","Date","toTimeString","handleDrop","replaceModalItem","bind","saveModalDetails","info","indexOf","event","item","tempevents","deleteItem","index","splice","componentDidMount","get","then","response","data","catch","error","formatEvents","map","end","start","startTime","endTime","extendedProps","formatDate","string","options","year","month","day","toLocaleDateString","render","dateFormat","require","backgroundColor","backgroundImage","backgroundAttachment","backgroundSize","textAlign","maxHeight","position","margin","height","handleDateClick","right","center","left"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './styling.css';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport RenderBody from './renderBody';\r\nimport axios from 'axios';\r\nimport {getEvents} from \"../eventData\";\r\nimport {getCategories} from \"../categoriesData\";\r\nimport img from '../assets/event_parallax.jpg';\r\n\r\n\r\nexport default class HomeCalendar extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.replaceModalItem = this.replaceModalItem.bind(this);\r\n    this.saveModalDetails = this.saveModalDetails.bind(this);\r\n    this.handleClick = this.handleClick.bind(this)   \r\n  }\r\n\r\n  state = {\r\n    newStart:[],\r\n    addModalChangeShow: false,\r\n    addModalShow: false,\r\n    modal: false,\r\n    requiredItem: 0,\r\n    events:[],\r\n    categories:[],\r\n    seen: false\r\n  }\r\n  replaceModalItem(info) {\r\n    this.setState({\r\n      requiredItem: this.state.events.indexOf(info.event)\r\n    });\r\n  }\r\n\r\n  saveModalDetails(item) {\r\n    const requiredItem = this.state.requiredItem;\r\n    let tempevents = this.state.events;\r\n    tempevents[requiredItem] = item;\r\n    this.setState({ events: tempevents });\r\n  }\r\n\r\n  deleteItem(index) {\r\n    let tempevents = this.state.events;\r\n    tempevents.splice(index, 1);\r\n    this.setState({ events: tempevents });\r\n    \r\n  }\r\n    \r\n  componentDidMount(){\r\n   // this.setState({events: getEvents(), categories: getCategories()});\r\n  this.setState({ categories: getCategories()});\r\n  axios.get('http://localhost:5000/events/')\r\n       .then(response=>{\r\n          this.setState({events: response.data});\r\n         })\r\n       .catch(function(error){console.log(error)});\r\n  }\r\n\r\n  formatEvents() {\r\n  return this.state.events.map(event => {\r\n      const {title, end, start} = event\r\n    \r\n      let startTime = new Date(start)\r\n      let endTime = new Date(end)\r\n    \r\n   return {\r\n       title, \r\n       start: startTime,\r\n       end: endTime, \r\n       extendedProps: {...event}\r\n  }\r\n  })\r\n\r\n}\r\n\r\n\r\n     handleClick=(eventClickInfo)=>{\r\n        \r\n        this.dialog.show({\r\n           // title:\" title\",\r\n            body: 'You want to add an event ?',\r\n         \r\n           \r\n            actions: [\r\n              Dialog.CancelAction(),\r\n             \r\n              Dialog.DefaultAction(\r\n                'Yes',\r\n                () => {\r\n                  this.setState({addModalShow:true})},\r\n                'btn-primary'\r\n              )\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n              dialog.hide()\r\n              console.log('closed by clicking background.')\r\n            }\r\n          })\r\n\r\n      }\r\n      toggle = () => {\r\n        this.setState({ modal: !this.state.modal });\r\n      };\r\n    \r\n      handleDragStop = () => {\r\n        this.dialog.show({\r\n          // title:\" title\",\r\n           body: 'The date will be changed ',\r\n        \r\n          \r\n           actions: [\r\n             Dialog.CancelAction(),\r\n            \r\n             Dialog.DefaultAction(\r\n               'OK',\r\n               () => {\r\n                 console.log('do stuff')},\r\n               'btn-primary'\r\n             )\r\n           ],\r\n           bsSize: 'small',\r\n           onHide: (dialog) => {\r\n             dialog.hide()\r\n             console.log('closed by clicking background.')\r\n           }\r\n         })\r\n      };\r\n      // handleEventClick= ({event}) => {\r\n        // openevent is a function I wrote to open a form to edit that appointment\r\n       // this.props.openAppointment(event.extendedProps)\r\n //this.dialog.showAlert('Hello Dialog!')}\r\n \r\n  /*  handleEventDrop = (info) => {\r\n            if(window.confirm(\"Are you sure you want to change the event date?\")){\r\n                console.log('change confirmed')\r\n    \r\n                // updateAppointment is another custom method\r\n                this.props.updateAppointment({...info.event.extendedProps, start: info.event.start, end: info.event.end})\r\n    \r\n            } else {\r\n                console.log('change aborted')\r\n            }\r\n       }*/\r\n       changeTitle = () => {   \r\n        let events = [...this.state.events];\r\n        events[0].title = new Date().toTimeString();\r\n        events[1].title = new Date().toTimeString();\r\n    \r\n        this.setState({  events });\r\n      };\r\n      handleDrop=()=>{\r\n        let events = [...this.state.events];\r\n       \r\n      }\r\n      formatDate(string){\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([],options);\r\n    }\r\n    \r\n  formatEvents() {\r\n    return this.state.events.map(event => {\r\n        const {title, end, start} = event\r\n      \r\n        let startTime = new Date(start)\r\n        let endTime = new Date(end)\r\n      \r\n     return {\r\n         title, \r\n         start: startTime,\r\n         end: endTime, \r\n         extendedProps: {...event}\r\n    }\r\n    })\r\n  \r\n  }\r\n  \r\n  \r\n      \r\n  render() {\r\n    let {title, start, end, events,newStart}=this.state;\r\n            var dateFormat = require('dateformat');\r\n    \r\n    \r\n\r\n    const requiredItem = this.state.requiredItem;\r\n\r\n  \r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n    \r\n  \r\n    return (\r\n    <React.Fragment>\r\n         <div className='row'style={{ backgroundColor:'white'}} >\r\n           \r\n           <div className=\"parallax\" id='thirdparallax' style={{backgroundImage:`url(${img})`,backgroundAttachment:'fixed',\r\n            backgroundSize:'cover',textAlign:'center', maxHeight:'100vh', position:'relative'}}>\r\n                 \r\n                 <div  id='layer_calendar' style={{margin:'5%'}} >\r\n      <div  style ={{height: '80vh', backgroundColor:'white', margin:'5%'}}>\r\n      \r\n              <FullCalendar dateClick={this.handleDateClick} \r\n              plugins={[ dayGridPlugin, interactionPlugin,bootstrapPlugin ]}\r\n                height='parent'\r\n                editable={true}\r\n                selectable={true}\r\n                selectMirror={true}\r\n                slotWidth={60}\r\n                eventColor= 'white'\r\n                eventBackgroundColor='#faf1e6'\r\n                eventBorderColor=\"#faf1e6\"\r\n                eventTextColor='black'\r\n                events={this.formatEvents()}\r\n                \r\n                 header={{\r\n                  right:  'prev,next today ',\r\n                  center: 'title',\r\n                  left:'myCustomButton,timeGridWeek,timeGridDay,listWeek'\r\n                 }}\r\n             \r\n                \r\n              />\r\n             \r\n           \r\n                \r\n</div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n</React.Fragment>\r\n          \r\n\r\n)\r\n  }\r\n}\r\n\r\n    \r\n"]},"metadata":{},"sourceType":"module"}