{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\src\\\\components\\\\theCalendar.jsx\";\nimport React, { Component } from 'react';\nimport './styling.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport Dialog from 'react-bootstrap-dialog';\nimport RenderBody from './renderBody';\nimport axios from 'axios';\nimport { getEvents } from \"../eventData\";\nimport { getCategories } from \"../categoriesData\";\nexport default class TheCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newStart: [],\n      addModalChangeShow: false,\n      addModalShow: false,\n      modal: false,\n      requiredItem: 0,\n      events: [],\n      categories: [],\n      seen: false\n    };\n\n    this.handleClick = eventClickInfo => {\n      this.dialog.show({\n        // title:\" title\",\n        body: 'You want to add an event ?',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('Yes', () => {\n          this.setState({\n            addModalShow: true\n          });\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleDragStop = () => {\n      this.dialog.show({\n        // title:\" title\",\n        body: 'The date will be changed ',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('OK', () => {\n          console.log('do stuff');\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.changeTitle = () => {\n      let events = [...this.state.events];\n      events[0].title = new Date().toTimeString();\n      events[1].title = new Date().toTimeString();\n      this.setState({\n        events\n      });\n    };\n\n    this.handleDrop = () => {\n      let events = [...this.state.events];\n    };\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  replaceModalItem(info) {\n    this.setState({\n      requiredItem: this.state.events.indexOf(info.event)\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempevents = this.state.events;\n    tempevents[requiredItem] = item;\n    this.setState({\n      events: tempevents\n    });\n  }\n\n  deleteItem(index) {\n    let tempevents = this.state.events;\n    tempevents.splice(index, 1);\n    this.setState({\n      events: tempevents\n    });\n  }\n\n  componentDidMount() {\n    // this.setState({events: getEvents(), categories: getCategories()});\n    this.setState({\n      categories: getCategories()\n    });\n    axios.get('http://localhost:4000/eventsDB/').then(response => {\n      this.setState({\n        events: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  formatEvents() {\n    return this.state.events.map(event => {\n      const {\n        title,\n        end,\n        start\n      } = event;\n      let startTime = new Date(start);\n      let endTime = new Date(end);\n      return {\n        title,\n        start: startTime,\n        end: endTime,\n        extendedProps: { ...event\n        }\n      };\n    });\n  }\n\n  formatDate(string) {\n    var options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(string).toLocaleDateString([], options);\n  }\n\n  render() {\n    let {\n      title,\n      start,\n      end,\n      events,\n      newStart\n    } = this.state;\n\n    var dateFormat = require('dateformat');\n\n    let addModalClose = () => {\n      this.setState({\n        addModalShow: false\n      });\n    };\n\n    let changeStateEvents = () => {\n      this.setState({\n        events\n      });\n      console.log(events.filter(e => e.title == \"Aeroday\"));\n    };\n\n    let addModalChangeClose = () => {\n      this.setState({\n        addModalShow: false\n      });\n    };\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.events[requiredItem];\n\n    let handle = () => {\n      this.setState({\n        addModalShow: true\n      });\n    };\n\n    let handleSec = (titlee, newStartt, newEnd, eventss) => {\n      console.log(this.state.events); // this.setState({addModalChangeShow:true});\n\n      this.dialog.show({\n        // title:\" title\",\n        body: 'The date will be changed ',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('OK', () => {\n          console.log('do stuff');\n          eventss.start = newStartt;\n          let newEvents = this.state.events;\n          let theEvent = newEvents.filter(e => e.title == titlee);\n          theEvent[0].start = newStartt;\n          theEvent[0].end = newEnd;\n          let theID = theEvent[0]._id;\n          const data = theEvent[0];\n          console.log(data);\n          axios.post('http://localhost:4000/eventsDB/update/' + theID, theEvent[0]).then(response => {\n            let mainOne = response.data;\n            console.log(mainOne);\n            /*  mainOne.start=newStartt;\r\n             theEvent=mainOne;\r\n             newEvents.filter(e => e.title ==titlee )[0].start=mainOne.start;\r\n             console.log ('newEvents'+ newEvents.filter(e => e.title ==titlee )[0].start);\r\n             this.setState({events:newEvents});\r\n             console.log(mainOne);\r\n             console.log(this.state.events) */\n          });\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      dateClick: this.handleDateClick,\n      plugins: [dayGridPlugin, interactionPlugin, bootstrapPlugin],\n      height: \"parent\",\n      editable: true,\n      selectable: true,\n      selectMirror: true,\n      select: this.handleClick,\n      dateClick: this.handleClick,\n      events: this.formatEvents(),\n      slotWidth: 60,\n      eventColor: \"white\",\n      eventBackgroundColor: \"#faf1e6\",\n      eventBorderColor: \"#faf1e6\",\n      eventTextColor: \"black\",\n      eventClick: this.changeTitle,\n      eventDrop: function (info) {\n        alert(info.event.title + \" was dropped on \" + info.event.start.toISOString().split('T')[0]);\n        let titlee = info.event.title;\n        let newStartt = info.event.start.toISOString().split('T')[0];\n        let newEnd = info.event.end.toISOString().split('T')[0];\n        let eventss = events.filter(e => e.title == info.event.title);\n        events.filter(e => e.title == info.event.title).start = info.event.start.toISOString().split('T')[0];\n        handleSec(titlee, newStartt, newEnd, eventss);\n      },\n      customButtons: {\n        myCustomButton: {\n          text: 'Add new event ',\n          click: handle\n        }\n      },\n      header: {\n        right: 'prev,next today ',\n        center: 'title',\n        left: 'myCustomButton,timeGridWeek,timeGridDay,listWeek'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"modal-dialog modal-dialog-centered\",\n      ref: component => {\n        this.dialog = component;\n      },\n      OKAction: handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"modal-dialog modal-dialog-centered\",\n      ref: component => {\n        this.dialog = component;\n      },\n      OKAction: changeStateEvents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(RenderBody, {\n      show: this.state.addModalShow,\n      onHide: addModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/src/components/theCalendar.jsx"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","bootstrapPlugin","Dialog","RenderBody","axios","getEvents","getCategories","TheCalendar","constructor","props","state","newStart","addModalChangeShow","addModalShow","modal","requiredItem","events","categories","seen","handleClick","eventClickInfo","dialog","show","body","actions","CancelAction","DefaultAction","setState","bsSize","onHide","hide","console","log","toggle","handleDragStop","changeTitle","title","Date","toTimeString","handleDrop","replaceModalItem","bind","saveModalDetails","info","indexOf","event","item","tempevents","deleteItem","index","splice","componentDidMount","get","then","response","data","catch","error","formatEvents","map","end","start","startTime","endTime","extendedProps","formatDate","string","options","year","month","day","toLocaleDateString","render","dateFormat","require","addModalClose","changeStateEvents","filter","e","addModalChangeClose","modalData","handle","handleSec","titlee","newStartt","newEnd","eventss","newEvents","theEvent","theID","_id","post","mainOne","handleDateClick","alert","toISOString","split","myCustomButton","text","click","right","center","left","component"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AAGA,eAAe,MAAMC,WAAN,SAA0BX,KAAK,CAACC,SAAhC,CAA0C;AAGvDW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,KAPmB,GAOX;AACNC,MAAAA,QAAQ,EAAC,EADH;AAENC,MAAAA,kBAAkB,EAAE,KAFd;AAGNC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,KAAK,EAAE,KAJD;AAKNC,MAAAA,YAAY,EAAE,CALR;AAMNC,MAAAA,MAAM,EAAC,EAND;AAONC,MAAAA,UAAU,EAAC,EAPL;AAQNC,MAAAA,IAAI,EAAE;AARA,KAPW;;AAAA,SAiEhBC,WAjEgB,GAiEHC,cAAD,IAAkB;AAE3B,WAAKC,MAAL,CAAYC,IAAZ,CAAiB;AACd;AACCC,QAAAA,IAAI,EAAE,4BAFO;AAKbC,QAAAA,OAAO,EAAE,CACPtB,MAAM,CAACuB,YAAP,EADO,EAGPvB,MAAM,CAACwB,aAAP,CACE,KADF,EAEE,MAAM;AACJ,eAAKC,QAAL,CAAc;AAACd,YAAAA,YAAY,EAAC;AAAd,WAAd;AAAmC,SAHvC,EAIE,aAJF,CAHO,CALI;AAebe,QAAAA,MAAM,EAAE,OAfK;AAgBbC,QAAAA,MAAM,EAAGR,MAAD,IAAY;AAClBA,UAAAA,MAAM,CAACS,IAAP;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AAnBY,OAAjB;AAsBD,KAzFc;;AAAA,SA0FfC,MA1Fe,GA0FN,MAAM;AACb,WAAKN,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAArB,OAAd;AACD,KA5Fc;;AAAA,SA8FfoB,cA9Fe,GA8FE,MAAM;AACrB,WAAKb,MAAL,CAAYC,IAAZ,CAAiB;AACf;AACCC,QAAAA,IAAI,EAAE,2BAFQ;AAKdC,QAAAA,OAAO,EAAE,CACPtB,MAAM,CAACuB,YAAP,EADO,EAGPvB,MAAM,CAACwB,aAAP,CACE,IADF,EAEE,MAAM;AACJK,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAAwB,SAH5B,EAIE,aAJF,CAHO,CALK;AAedJ,QAAAA,MAAM,EAAE,OAfM;AAgBdC,QAAAA,MAAM,EAAGR,MAAD,IAAY;AAClBA,UAAAA,MAAM,CAACS,IAAP;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AAnBa,OAAjB;AAqBD,KApHc;;AAAA,SAqIdG,WArIc,GAqIA,MAAM;AACnB,UAAInB,MAAM,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWM,MAAf,CAAb;AACAA,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUoB,KAAV,GAAkB,IAAIC,IAAJ,GAAWC,YAAX,EAAlB;AACAtB,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUoB,KAAV,GAAkB,IAAIC,IAAJ,GAAWC,YAAX,EAAlB;AAEA,WAAKX,QAAL,CAAc;AAAGX,QAAAA;AAAH,OAAd;AACD,KA3Ic;;AAAA,SA4IfuB,UA5Ie,GA4IJ,MAAI;AACb,UAAIvB,MAAM,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWM,MAAf,CAAb;AAED,KA/Ic;;AAEjB,SAAKwB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKtB,WAAL,GAAmB,KAAKA,WAAL,CAAiBsB,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAYDD,EAAAA,gBAAgB,CAACG,IAAD,EAAO;AACrB,SAAKhB,QAAL,CAAc;AACZZ,MAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,MAAX,CAAkB4B,OAAlB,CAA0BD,IAAI,CAACE,KAA/B;AADF,KAAd;AAGD;;AAEDH,EAAAA,gBAAgB,CAACI,IAAD,EAAO;AACrB,UAAM/B,YAAY,GAAG,KAAKL,KAAL,CAAWK,YAAhC;AACA,QAAIgC,UAAU,GAAG,KAAKrC,KAAL,CAAWM,MAA5B;AACA+B,IAAAA,UAAU,CAAChC,YAAD,CAAV,GAA2B+B,IAA3B;AACA,SAAKnB,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAE+B;AAAV,KAAd;AACD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,QAAIF,UAAU,GAAG,KAAKrC,KAAL,CAAWM,MAA5B;AACA+B,IAAAA,UAAU,CAACG,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACA,SAAKtB,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAE+B;AAAV,KAAd;AAED;;AAEDI,EAAAA,iBAAiB,GAAE;AAClB;AACD,SAAKxB,QAAL,CAAc;AAAEV,MAAAA,UAAU,EAAEX,aAAa;AAA3B,KAAd;AACAF,IAAAA,KAAK,CAACgD,GAAN,CAAU,iCAAV,EACMC,IADN,CACWC,QAAQ,IAAE;AACb,WAAK3B,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAEsC,QAAQ,CAACC;AAAlB,OAAd;AACA,KAHR,EAIMC,KAJN,CAIY,UAASC,KAAT,EAAe;AAAC1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AAAmB,KAJ/C;AAKC;;AAEDC,EAAAA,YAAY,GAAG;AACf,WAAO,KAAKhD,KAAL,CAAWM,MAAX,CAAkB2C,GAAlB,CAAsBd,KAAK,IAAI;AAClC,YAAM;AAACT,QAAAA,KAAD;AAAQwB,QAAAA,GAAR;AAAaC,QAAAA;AAAb,UAAsBhB,KAA5B;AAEA,UAAIiB,SAAS,GAAG,IAAIzB,IAAJ,CAASwB,KAAT,CAAhB;AACA,UAAIE,OAAO,GAAG,IAAI1B,IAAJ,CAASuB,GAAT,CAAd;AAEH,aAAO;AACHxB,QAAAA,KADG;AAEHyB,QAAAA,KAAK,EAAEC,SAFJ;AAGHF,QAAAA,GAAG,EAAEG,OAHF;AAIHC,QAAAA,aAAa,EAAE,EAAC,GAAGnB;AAAJ;AAJZ,OAAP;AAMA,KAZM,CAAP;AAcD;;AAkFKoB,EAAAA,UAAU,CAACC,MAAD,EAAQ;AAChB,QAAIC,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,GAAG,EAAE;AAAvC,KAAd;AACA,WAAO,IAAIjC,IAAJ,CAAS6B,MAAT,EAAiBK,kBAAjB,CAAoC,EAApC,EAAuCJ,OAAvC,CAAP;AACH;;AAEHK,EAAAA,MAAM,GAAG;AACP,QAAI;AAACpC,MAAAA,KAAD;AAAQyB,MAAAA,KAAR;AAAeD,MAAAA,GAAf;AAAoB5C,MAAAA,MAApB;AAA2BL,MAAAA;AAA3B,QAAqC,KAAKD,KAA9C;;AACQ,QAAI+D,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACR,QAAIC,aAAa,GAAE,MAAI;AACrB,WAAKhD,QAAL,CAAc;AAACd,QAAAA,YAAY,EAAC;AAAd,OAAd;AACD,KAFD;;AAGA,QAAI+D,iBAAiB,GAAC,MAAI;AACxB,WAAKjD,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAM,CAAC6D,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAAC1C,KAAF,IAAU,SAA7B,CAAZ;AACD,KAHD;;AAIA,QAAI2C,mBAAmB,GAAE,MAAI;AAC3B,WAAKpD,QAAL,CAAc;AAACd,QAAAA,YAAY,EAAC;AAAd,OAAd;AACD,KAFD;;AAIA,UAAME,YAAY,GAAG,KAAKL,KAAL,CAAWK,YAAhC;AACA,QAAIiE,SAAS,GAAG,KAAKtE,KAAL,CAAWM,MAAX,CAAkBD,YAAlB,CAAhB;;AACA,QAAIkE,MAAM,GAAE,MAAI;AACd,WAAKtD,QAAL,CAAc;AAACd,QAAAA,YAAY,EAAC;AAAd,OAAd;AACD,KAFD;;AAGA,QAAIqE,SAAS,GAAE,CAACC,MAAD,EAAQC,SAAR,EAAkBC,MAAlB,EAAyBC,OAAzB,KAAmC;AAChDvD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWM,MAAvB,EADgD,CAEjD;;AAGA,WAAKK,MAAL,CAAYC,IAAZ,CAAiB;AAChB;AACCC,QAAAA,IAAI,EAAE,2BAFS;AAKfC,QAAAA,OAAO,EAAE,CACPtB,MAAM,CAACuB,YAAP,EADO,EAGPvB,MAAM,CAACwB,aAAP,CACE,IADF,EAEE,MAAM;AACJK,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAsD,UAAAA,OAAO,CAACzB,KAAR,GAAcuB,SAAd;AACP,cAAIG,SAAS,GAAE,KAAK7E,KAAL,CAAWM,MAA1B;AACA,cAAIwE,QAAQ,GAAGD,SAAS,CAACV,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAAC1C,KAAF,IAAU+C,MAAhC,CAAf;AACAK,UAAAA,QAAQ,CAAC,CAAD,CAAR,CAAY3B,KAAZ,GAAkBuB,SAAlB;AACAI,UAAAA,QAAQ,CAAC,CAAD,CAAR,CAAY5B,GAAZ,GAAgByB,MAAhB;AACA,cAAII,KAAK,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAxB;AAGA,gBAAMnC,IAAI,GAAGiC,QAAQ,CAAC,CAAD,CAArB;AACAzD,UAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAZ;AACCnD,UAAAA,KAAK,CAACuF,IAAN,CAAW,2CAAyCF,KAApD,EAA0DD,QAAQ,CAAC,CAAD,CAAlE,EACEnC,IADF,CACOC,QAAQ,IAAE;AACf,gBAAIsC,OAAO,GAACtC,QAAQ,CAACC,IAArB;AAECxB,YAAAA,OAAO,CAACC,GAAR,CAAY4D,OAAZ;AACD;;;;;;;AAQA,WAbF;AAgBF,SA9BI,EA+BE,aA/BF,CAHO,CALM;AA0CfhE,QAAAA,MAAM,EAAE,OA1CO;AA2CfC,QAAAA,MAAM,EAAGR,MAAD,IAAY;AAClBA,UAAAA,MAAM,CAACS,IAAP;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AA9Cc,OAAjB;AA0DF,KA/DC;;AAgEA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEU,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAK6D,eAA9B;AACA,MAAA,OAAO,EAAE,CAAE9F,aAAF,EAAiBC,iBAAjB,EAAmCC,eAAnC,CADT;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,UAAU,EAAE,IAJd;AAKE,MAAA,YAAY,EAAE,IALhB;AAME,MAAA,MAAM,EAAE,KAAKkB,WANf;AAOE,MAAA,SAAS,EAAE,KAAKA,WAPlB;AAQE,MAAA,MAAM,EAAE,KAAKuC,YAAL,EARV;AASE,MAAA,SAAS,EAAE,EATb;AAUE,MAAA,UAAU,EAAE,OAVd;AAWE,MAAA,oBAAoB,EAAC,SAXvB;AAYE,MAAA,gBAAgB,EAAC,SAZnB;AAaE,MAAA,cAAc,EAAC,OAbjB;AAcE,MAAA,UAAU,EAAE,KAAKvB,WAdnB;AAeE,MAAA,SAAS,EAAE,UAASQ,IAAT,EAAe;AAC1BmD,QAAAA,KAAK,CAACnD,IAAI,CAACE,KAAL,CAAWT,KAAX,GAAmB,kBAAnB,GAAyCO,IAAI,CAACE,KAAL,CAAWgB,KAAX,CAAiBkC,WAAjB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAA1C,CAAL;AACA,YAAIb,MAAM,GAACxC,IAAI,CAACE,KAAL,CAAWT,KAAtB;AACA,YAAIgD,SAAS,GAACzC,IAAI,CAACE,KAAL,CAAWgB,KAAX,CAAiBkC,WAAjB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAd;AACA,YAAIX,MAAM,GAAC1C,IAAI,CAACE,KAAL,CAAWe,GAAX,CAAemC,WAAf,GAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAX;AACA,YAAIV,OAAO,GAACtE,MAAM,CAAC6D,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAAC1C,KAAF,IAAUO,IAAI,CAACE,KAAL,CAAWT,KAAxC,CAAZ;AACCpB,QAAAA,MAAM,CAAC6D,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAAC1C,KAAF,IAAUO,IAAI,CAACE,KAAL,CAAWT,KAAxC,CAAD,CAAkDyB,KAAlD,GAAyDlB,IAAI,CAACE,KAAL,CAAWgB,KAAX,CAAiBkC,WAAjB,GAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAzD;AACCd,QAAAA,SAAS,CAACC,MAAD,EAAQC,SAAR,EAAkBC,MAAlB,EAAyBC,OAAzB,CAAT;AACD,OAvBF;AAwBE,MAAA,aAAa,EAAE;AACbW,QAAAA,cAAc,EAAE;AACZC,UAAAA,IAAI,EAAE,gBADM;AAEZC,UAAAA,KAAK,EAAClB;AAFM;AADH,OAxBjB;AA+BG,MAAA,MAAM,EAAE;AACPmB,QAAAA,KAAK,EAAG,kBADD;AAEPC,QAAAA,MAAM,EAAE,OAFD;AAGPC,QAAAA,IAAI,EAAC;AAHE,OA/BX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV,eA0CU,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,oCAAlB;AACC,MAAA,GAAG,EAAGC,SAAD,IAAe;AAAE,aAAKlF,MAAL,GAAckF,SAAd;AAAyB,OADhD;AAEE,MAAA,QAAQ,EAAEtB,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CV,eA+CY,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,oCAAlB;AACC,MAAA,GAAG,EAAGsB,SAAD,IAAe;AAAE,aAAKlF,MAAL,GAAckF,SAAd;AAAyB,OADhD;AAEC,MAAA,QAAQ,EAAE3B,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CZ,eAoDa,oBAAC,UAAD;AACA,MAAA,IAAI,EAAE,KAAKlE,KAAL,CAAWG,YADjB;AAEA,MAAA,MAAM,EAAE8D,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApDb,CADA;AA+DD;;AA1SsD","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './styling.css';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport RenderBody from './renderBody';\r\nimport axios from 'axios';\r\nimport {getEvents} from \"../eventData\";\r\nimport {getCategories} from \"../categoriesData\";\r\n\r\n\r\nexport default class TheCalendar extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.replaceModalItem = this.replaceModalItem.bind(this);\r\n    this.saveModalDetails = this.saveModalDetails.bind(this);\r\n    this.handleClick = this.handleClick.bind(this)   \r\n  }\r\n\r\n  state = {\r\n    newStart:[],\r\n    addModalChangeShow: false,\r\n    addModalShow: false,\r\n    modal: false,\r\n    requiredItem: 0,\r\n    events:[],\r\n    categories:[],\r\n    seen: false\r\n  }\r\n  replaceModalItem(info) {\r\n    this.setState({\r\n      requiredItem: this.state.events.indexOf(info.event)\r\n    });\r\n  }\r\n\r\n  saveModalDetails(item) {\r\n    const requiredItem = this.state.requiredItem;\r\n    let tempevents = this.state.events;\r\n    tempevents[requiredItem] = item;\r\n    this.setState({ events: tempevents });\r\n  }\r\n\r\n  deleteItem(index) {\r\n    let tempevents = this.state.events;\r\n    tempevents.splice(index, 1);\r\n    this.setState({ events: tempevents });\r\n    \r\n  }\r\n    \r\n  componentDidMount(){\r\n   // this.setState({events: getEvents(), categories: getCategories()});\r\n  this.setState({ categories: getCategories()});\r\n  axios.get('http://localhost:4000/eventsDB/')\r\n       .then(response=>{\r\n          this.setState({events: response.data});\r\n         })\r\n       .catch(function(error){console.log(error)});\r\n  }\r\n\r\n  formatEvents() {\r\n  return this.state.events.map(event => {\r\n      const {title, end, start} = event\r\n    \r\n      let startTime = new Date(start)\r\n      let endTime = new Date(end)\r\n    \r\n   return {\r\n       title, \r\n       start: startTime,\r\n       end: endTime, \r\n       extendedProps: {...event}\r\n  }\r\n  })\r\n\r\n}\r\n\r\n\r\n     handleClick=(eventClickInfo)=>{\r\n        \r\n        this.dialog.show({\r\n           // title:\" title\",\r\n            body: 'You want to add an event ?',\r\n         \r\n           \r\n            actions: [\r\n              Dialog.CancelAction(),\r\n             \r\n              Dialog.DefaultAction(\r\n                'Yes',\r\n                () => {\r\n                  this.setState({addModalShow:true})},\r\n                'btn-primary'\r\n              )\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n              dialog.hide()\r\n              console.log('closed by clicking background.')\r\n            }\r\n          })\r\n\r\n      }\r\n      toggle = () => {\r\n        this.setState({ modal: !this.state.modal });\r\n      };\r\n    \r\n      handleDragStop = () => {\r\n        this.dialog.show({\r\n          // title:\" title\",\r\n           body: 'The date will be changed ',\r\n        \r\n          \r\n           actions: [\r\n             Dialog.CancelAction(),\r\n            \r\n             Dialog.DefaultAction(\r\n               'OK',\r\n               () => {\r\n                 console.log('do stuff')},\r\n               'btn-primary'\r\n             )\r\n           ],\r\n           bsSize: 'small',\r\n           onHide: (dialog) => {\r\n             dialog.hide()\r\n             console.log('closed by clicking background.')\r\n           }\r\n         })\r\n      };\r\n      // handleEventClick= ({event}) => {\r\n        // openevent is a function I wrote to open a form to edit that appointment\r\n       // this.props.openAppointment(event.extendedProps)\r\n //this.dialog.showAlert('Hello Dialog!')}\r\n \r\n  /*  handleEventDrop = (info) => {\r\n            if(window.confirm(\"Are you sure you want to change the event date?\")){\r\n                console.log('change confirmed')\r\n    \r\n                // updateAppointment is another custom method\r\n                this.props.updateAppointment({...info.event.extendedProps, start: info.event.start, end: info.event.end})\r\n    \r\n            } else {\r\n                console.log('change aborted')\r\n            }\r\n       }*/\r\n       changeTitle = () => {   \r\n        let events = [...this.state.events];\r\n        events[0].title = new Date().toTimeString();\r\n        events[1].title = new Date().toTimeString();\r\n    \r\n        this.setState({  events });\r\n      };\r\n      handleDrop=()=>{\r\n        let events = [...this.state.events];\r\n       \r\n      }\r\n      formatDate(string){\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([],options);\r\n    }\r\n      \r\n  render() {\r\n    let {title, start, end, events,newStart}=this.state;\r\n            var dateFormat = require('dateformat');\r\n    let addModalClose =()=>{\r\n      this.setState({addModalShow:false});\r\n    }\r\n    let changeStateEvents=()=>{\r\n      this.setState({events});\r\n      console.log(events.filter(e => e.title ==\"Aeroday\" ));\r\n    }\r\n    let addModalChangeClose =()=>{\r\n      this.setState({addModalShow:false})\r\n    }\r\n\r\n    const requiredItem = this.state.requiredItem;\r\n    let modalData = this.state.events[requiredItem];\r\n    let handle =()=>{\r\n      this.setState({addModalShow:true})\r\n    }\r\n    let handleSec =(titlee,newStartt,newEnd,eventss)=>{\r\n      console.log(this.state.events);\r\n     // this.setState({addModalChangeShow:true});\r\n     \r\n     \r\n     this.dialog.show({\r\n      // title:\" title\",\r\n       body: 'The date will be changed ',\r\n    \r\n      \r\n       actions: [\r\n         Dialog.CancelAction(),\r\n        \r\n         Dialog.DefaultAction(\r\n           'OK',\r\n           () => {\r\n             console.log('do stuff');\r\n             eventss.start=newStartt;\r\n      let newEvents= this.state.events;\r\n      let theEvent = newEvents.filter(e => e.title ==titlee )\r\n      theEvent[0].start=newStartt;\r\n      theEvent[0].end=newEnd;\r\n      let theID = theEvent[0]._id;\r\n     \r\n      \r\n      const data = theEvent[0];\r\n      console.log(data);\r\n       axios.post('http://localhost:4000/eventsDB/update/'+theID,theEvent[0])\r\n        .then(response=>{\r\n         let mainOne=response.data;\r\n         \r\n          console.log(mainOne);\r\n         /*  mainOne.start=newStartt;\r\n          theEvent=mainOne;\r\n          newEvents.filter(e => e.title ==titlee )[0].start=mainOne.start;\r\n          console.log ('newEvents'+ newEvents.filter(e => e.title ==titlee )[0].start);\r\n          this.setState({events:newEvents});\r\n          console.log(mainOne);\r\n          console.log(this.state.events) */\r\n\r\n        }) \r\n  \r\n      \r\n    },\r\n           'btn-primary'\r\n         )\r\n       ],\r\n       bsSize: 'small',\r\n       onHide: (dialog) => {\r\n         dialog.hide()\r\n         console.log('closed by clicking background.')\r\n       }\r\n     })\r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n    \r\n  }\r\n    return (\r\n    <div className='container' >\r\n\r\n              <FullCalendar dateClick={this.handleDateClick} \r\n              plugins={[ dayGridPlugin, interactionPlugin,bootstrapPlugin ]}\r\n                height='parent'\r\n                editable={true}\r\n                selectable={true}\r\n                selectMirror={true}\r\n                select={this.handleClick}\r\n                dateClick={this.handleClick}\r\n                events={this.formatEvents()}\r\n                slotWidth={60}\r\n                eventColor= 'white'\r\n                eventBackgroundColor='#faf1e6'\r\n                eventBorderColor=\"#faf1e6\"\r\n                eventTextColor='black'\r\n                eventClick={this.changeTitle}\r\n                eventDrop={function(info) {\r\n                alert(info.event.title + \" was dropped on \" +  info.event.start.toISOString().split('T')[0]);\r\n                let titlee=info.event.title;\r\n                let newStartt=info.event.start.toISOString().split('T')[0];\r\n                let newEnd=info.event.end.toISOString().split('T')[0];\r\n                let eventss=events.filter(e => e.title ==info.event.title );\r\n                (events.filter(e => e.title ==info.event.title )).start= info.event.start.toISOString().split('T')[0];\r\n                 handleSec(titlee,newStartt,newEnd,eventss);\r\n               }}\r\n                customButtons={{\r\n                  myCustomButton: {\r\n                      text: 'Add new event ',\r\n                      click:handle\r\n                      },\r\n                 }\r\n                }\r\n                 header={{\r\n                  right:  'prev,next today ',\r\n                  center: 'title',\r\n                  left:'myCustomButton,timeGridWeek,timeGridDay,listWeek'\r\n                 }}\r\n             \r\n                \r\n              />\r\n             \r\n              <Dialog className=\"modal-dialog modal-dialog-centered\"\r\n               ref={(component) => { this.dialog = component }}\r\n                OKAction={handle}\r\n               />\r\n                \r\n                <Dialog className=\"modal-dialog modal-dialog-centered\"\r\n                 ref={(component) => { this.dialog = component }}\r\n                 OKAction={changeStateEvents}\r\n               />\r\n\r\n                 <RenderBody\r\n                 show={this.state.addModalShow}\r\n                 onHide={addModalClose}/>\r\n\r\n      \r\n              \r\n          </div>\r\n\r\n\r\n)\r\n  }\r\n}\r\n\r\n    \r\n"]},"metadata":{},"sourceType":"module"}