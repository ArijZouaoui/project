{"ast":null,"code":"import { USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, GET_ERRORS, LOGOUT_SUCCESS, GET_USERS, CLEAR_ERRORS } from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n  msg: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n\n    case CLEAR_ERRORS:\n      {\n        return {\n          msg: {},\n          status: null,\n          id: null\n        };\n      }\n\n    case GET_USERS:\n      return { ...state,\n        users: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/client/src/reducers/authReducer.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","LOGOUT_SUCCESS","GET_USERS","CLEAR_ERRORS","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","msg","state","action","type","payload","setItem","removeItem","status","id","users"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,aAPF,EAQEC,UARF,EASEC,cATF,EAUEC,SAVF,EAWEC,YAXF,QAYO,kBAZP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE,IAJa;AAKnBC,EAAAA,GAAG,EAAE;AALc,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGR,YAAjB,EAA+BS,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,YAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELH,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELJ,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAJR,OAAP;;AAMF,SAAKnB,aAAL;AACA,SAAKE,gBAAL;AACEQ,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACE,OAAP,CAAeV,KAA7C;AACA,aAAO,EACL,GAAGO,KADE;AAEL,WAAGC,MAAM,CAACE,OAFL;AAGLP,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKd,UAAL;AACA,SAAKE,UAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,KAAK,EAAE,IAFF;AAGLK,QAAAA,IAAI,EAAE,IAHD;AAILF,QAAAA,eAAe,EAAE,KAJZ;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF,SAAKR,cAAL;AACA,SAAKF,aAAL;AACEO,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGL,KADE;AAELP,QAAAA,KAAK,EAAE,IAFF;AAGLK,QAAAA,IAAI,EAAE,IAHD;AAILF,QAAAA,eAAe,EAAE,KAJZ;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF,SAAKT,UAAL;AACE,aAAO;AACLW,QAAAA,GAAG,EAAEE,MAAM,CAACE,OAAP,CAAeJ,GADf;AAELO,QAAAA,MAAM,EAAEL,MAAM,CAACE,OAAP,CAAeG,MAFlB;AAGLC,QAAAA,EAAE,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAHd,OAAP;;AAKF,SAAKhB,YAAL;AAAmB;AACjB,eAAO;AACLQ,UAAAA,GAAG,EAAE,EADA;AAELO,UAAAA,MAAM,EAAE,IAFH;AAGLC,UAAAA,EAAE,EAAE;AAHC,SAAP;AAKD;;AACD,SAAKjB,SAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYQ,QAAAA,KAAK,EAAEP,MAAM,CAACE;AAA1B,OAAP;;AAEF;AACE,aAAOH,KAAP;AA1DJ;AA4DD","sourcesContent":["import {\n  USER_LOADING,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  GET_ERRORS,\n  LOGOUT_SUCCESS,\n  GET_USERS,\n  CLEAR_ERRORS\n} from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null,\n  msg: {}\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS: {\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    }\n    case GET_USERS:\n      return { ...state, users: action.payload };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}