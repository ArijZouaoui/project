{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\src\\\\components\\\\calendar.jsx\";\nimport React, { Component } from 'react';\nimport './styling.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nexport default class TheCalendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointments: [{\n        title: 'event 1',\n        date: '2019-04-01'\n      }, {\n        title: 'event 2',\n        date: '2019-04-02'\n      }]\n    };\n\n    this.handleDateClick = arg => {// bind with an arrow function\n    };\n\n    this.handleEventClick = ({\n      event\n    }) => {\n      // openAppointment is a function I wrote to open a form to edit that appointment\n      this.props.openAppointment(event.extendedProps);\n    };\n\n    this.handleEventDrop = info => {\n      if (window.confirm(\"Are you sure you want to change the event date?\")) {\n        console.log('change confirmed'); // updateAppointment is another custom method\n\n        this.props.updateAppointment({ ...info.event.extendedProps,\n          start: info.event.start,\n          end: info.event.end\n        });\n      } else {\n        console.log('change aborted');\n      }\n    };\n  }\n\n  formatEvents() {\n    return this.state.appointments.map(appointment => {\n      const {\n        title,\n        end,\n        start\n      } = appointment;\n      let startTime = new Date(start);\n      let endTime = new Date(end);\n      return {\n        title,\n        start: startTime,\n        end: endTime,\n        extendedProps: { ...appointment\n        }\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      dateClick: this.handleDateClick,\n      plugins: [dayGridPlugin, interactionPlugin],\n      weekends: false,\n      editable: true,\n      eventDrop: this.handleEventDrop,\n      eventClick: this.handleEventClick,\n      events: this.formatEvents(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/src/components/calendar.jsx"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","TheCalendar","state","appointments","title","date","handleDateClick","arg","handleEventClick","event","props","openAppointment","extendedProps","handleEventDrop","info","window","confirm","console","log","updateAppointment","start","end","formatEvents","map","appointment","startTime","Date","endTime","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,eAAe,MAAMC,WAAN,SAA0BL,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACrDK,KADqD,GAC/C;AACFC,MAAAA,YAAY,EAAC,CACT;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OADS,EAET;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAFS;AADX,KAD+C;;AAAA,SAUrDC,eAVqD,GAUlCC,GAAD,IAAS,CAAE;AAE1B,KAZkD;;AAAA,SA6BnDC,gBA7BmD,GA6BjC,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAa;AAC7B;AACA,WAAKC,KAAL,CAAWC,eAAX,CAA2BF,KAAK,CAACG,aAAjC;AACH,KAhCoD;;AAAA,SAkCrDC,eAlCqD,GAkClCC,IAAD,IAAU;AACpB,UAAGC,MAAM,CAACC,OAAP,CAAe,iDAAf,CAAH,EAAqE;AACjEC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADiE,CAGjE;;AACA,aAAKR,KAAL,CAAWS,iBAAX,CAA6B,EAAC,GAAGL,IAAI,CAACL,KAAL,CAAWG,aAAf;AAA8BQ,UAAAA,KAAK,EAAEN,IAAI,CAACL,KAAL,CAAWW,KAAhD;AAAuDC,UAAAA,GAAG,EAAEP,IAAI,CAACL,KAAL,CAAWY;AAAvE,SAA7B;AAEH,OAND,MAMO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACL,KA5CiD;AAAA;;AAanDI,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKpB,KAAL,CAAWC,YAAX,CAAwBoB,GAAxB,CAA4BC,WAAW,IAAI;AACxC,YAAM;AAACpB,QAAAA,KAAD;AAAQiB,QAAAA,GAAR;AAAaD,QAAAA;AAAb,UAAsBI,WAA5B;AAEA,UAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASN,KAAT,CAAhB;AACA,UAAIO,OAAO,GAAG,IAAID,IAAJ,CAASL,GAAT,CAAd;AAEA,aAAO;AACLjB,QAAAA,KADK;AAELgB,QAAAA,KAAK,EAAEK,SAFF;AAGLJ,QAAAA,GAAG,EAAEM,OAHA;AAILf,QAAAA,aAAa,EAAE,EAAC,GAAGY;AAAJ;AAJV,OAAP;AAMH,KAZA,CAAP;AAaD;;AAkBLI,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKtB,eAA9B;AACA,MAAA,OAAO,EAAE,CAAEP,aAAF,EAAiBC,iBAAjB,CADT;AAEC,MAAA,QAAQ,EAAE,KAFX;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,SAAS,EAAE,KAAKa,eAJlB;AAKE,MAAA,UAAU,EAAE,KAAKL,gBALnB;AAME,MAAA,MAAM,EAAE,KAAKc,YAAL,EANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,CADA;AAWD;;AAzDsD","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './styling.css';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nexport default class TheCalendar extends React.Component {\r\n    state={\r\n        appointments:[\r\n            { title: 'event 1', date: '2019-04-01' },\r\n            { title: 'event 2', date: '2019-04-02' }\r\n          ]\r\n    }\r\n    \r\n\r\n\r\n    handleDateClick = (arg) => { // bind with an arrow function\r\n       \r\n      }\r\n      formatEvents() {\r\n        return this.state.appointments.map(appointment => {\r\n                  const {title, end, start} = appointment\r\n      \r\n                  let startTime = new Date(start)\r\n                  let endTime = new Date(end)\r\n      \r\n                  return {\r\n                    title, \r\n                    start: startTime,\r\n                    end: endTime, \r\n                    extendedProps: {...appointment}\r\n                  }\r\n              })\r\n      }\r\n\r\n      handleEventClick= ({event}) => {\r\n        // openAppointment is a function I wrote to open a form to edit that appointment\r\n        this.props.openAppointment(event.extendedProps)\r\n    }\r\n    \r\n    handleEventDrop = (info) => {\r\n            if(window.confirm(\"Are you sure you want to change the event date?\")){\r\n                console.log('change confirmed')\r\n    \r\n                // updateAppointment is another custom method\r\n                this.props.updateAppointment({...info.event.extendedProps, start: info.event.start, end: info.event.end})\r\n    \r\n            } else {\r\n                console.log('change aborted')\r\n            }\r\n       }\r\n  render() {\r\n    return (\r\n    <div className='jumbotron'>\r\n              <FullCalendar dateClick={this.handleDateClick} \r\n              plugins={[ dayGridPlugin, interactionPlugin ]}\r\n               weekends={false}\r\n                editable={true}\r\n                eventDrop={this.handleEventDrop}\r\n                eventClick={this.handleEventClick}\r\n                events={this.formatEvents()}/>\r\n              </div>\r\n)\r\n  }\r\n}\r\n\r\n    \r\n"]},"metadata":{},"sourceType":"module"}