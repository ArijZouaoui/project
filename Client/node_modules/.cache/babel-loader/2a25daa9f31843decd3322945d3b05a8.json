{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\client\\\\src\\\\components\\\\renderBody.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Modal, Button, Row, Col } from 'react-bootstrap';\nimport img from '../assets/defaultpic.png';\nimport { faBullseye } from '@fortawesome/free-solid-svg-icons';\nimport ImageUpload from './imageUpload';\nimport ImageUploader from 'react-images-upload';\nimport axios from 'axios';\n\nclass RenderBody extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snackbarClose = event => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.onChangeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state.title);\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snackbarmsg: '',\n      title: '',\n      category: '',\n      start: '',\n      end: '',\n      image: '',\n      dsc: '',\n      file: '',\n      imagePreviewUrl: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      pictures: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    /*    let files = event.target.files;\r\n        this.setState({ 'selectedFiles': files })\r\n    event.preventDefault();\r\n    let data = new FormData();\r\n       //Append files to form data\r\n       let files = this.state.files;\r\n       for (let i = 0; i < files.length; i++) {\r\n         data.append(\"file\", files[i], files[i].name);\r\n       }\r\n     */\n    // data.append ('file', this.state.)\n    // alert(event.target.EventName.value);\n    event.preventDefault();\n    /*const data = { title:this.state.title,category:this.state.category,dsc:this.state.dsc\r\n     ,start:this.state.start,end:this.state.end, image:this.state.image}\r\n     */\n\n    const formData = new FormData();\n    formData.append('title', '');\n    formData.append('category', '');\n    formData.append('dsc', '');\n    formData.append('start', '');\n    formData.append('end', '');\n    formData.append('image', '');\n    axios.post(\"http://localhost:5000/events/add/\", formData).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n    /*let options = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        method: 'POST'\r\n      };\r\n    \r\n      options.body = new FormData();\r\n      for (let key in data) {\r\n        options.body.append(key, data[key]);\r\n      }\r\n    \r\n     fetch('http://localhost:5000/events/add/', options)\r\n         \r\n    .then(res=>res.json())\r\n    .then((result)=>\r\n    {\r\n        alert(result);\r\n    },(error)=>{\r\n        alert('Failed')\r\n    })*/\n\n    window.location.reload();\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Add a New Event\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 34\n      }\n    }, \"Event name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 34\n      }\n    }, \"Start date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"start\",\n      required: true,\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 34\n      }\n    }, \"End date\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"end\",\n      required: true,\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"dsc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 34\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"dsc\",\n      required: true,\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 34\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"category\",\n      required: true,\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imagePreviewUrl || img,\n      alt: \"Uploaded Image\",\n      height: \"200\",\n      width: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Form.File, {\n      id: \"exampleFormControlFile1\",\n      label: \"Event Image\",\n      onChange: this._handleImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      vaiant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 30\n      }\n    }, \"Add\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 22\n      }\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.onHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Close\"))));\n  }\n\n}\n\nexport default RenderBody;","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/client/src/components/renderBody.jsx"],"names":["React","Component","Form","Modal","Button","Row","Col","img","faBullseye","ImageUpload","ImageUploader","axios","RenderBody","constructor","props","snackbarClose","event","setState","snackbaropen","onChangeHandler","target","name","value","console","log","state","title","snackbarmsg","category","start","end","image","dsc","file","imagePreviewUrl","handleSubmit","bind","pictures","onDrop","_handleImageChange","preventDefault","formData","FormData","append","post","then","res","data","window","location","reload","picture","concat","e","reader","FileReader","files","onloadend","result","readAsDataURL","render","$imagePreview","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form, Modal, Button, Row, Col, } from 'react-bootstrap';\r\nimport img from '../assets/defaultpic.png';\r\nimport { faBullseye } from '@fortawesome/free-solid-svg-icons';\r\nimport ImageUpload from './imageUpload';\r\nimport ImageUploader from 'react-images-upload';\r\nimport axios from'axios';\r\n\r\n\r\nclass RenderBody extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={snackbaropen: false, snackbarmsg:'', title:'', category:'', start:'', end:'', \r\n    image:'', dsc:'',  file: '', imagePreviewUrl: ''}\r\n        this.handleSubmit= this.handleSubmit.bind(this);\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this._handleImageChange = this._handleImageChange.bind(this);\r\n     \r\n\r\n    }\r\n\r\n\r\n    snackbarClose=(event)=>{\r\n        this.setState({snackbaropen:false});\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n    /*    let files = event.target.files;\r\n        this.setState({ 'selectedFiles': files })\r\n    event.preventDefault();\r\n   let data = new FormData();\r\n       //Append files to form data\r\n       let files = this.state.files;\r\n       for (let i = 0; i < files.length; i++) {\r\n         data.append(\"file\", files[i], files[i].name);\r\n       }\r\n     */\r\n   // data.append ('file', this.state.)\r\n   // alert(event.target.EventName.value);\r\n   event.preventDefault();\r\n   /*const data = { title:this.state.title,category:this.state.category,dsc:this.state.dsc\r\n    ,start:this.state.start,end:this.state.end, image:this.state.image}\r\n    */\r\n   const formData = new FormData();\r\n   formData.append('title','');\r\n   formData.append('category','');\r\n   formData.append('dsc','');\r\n   formData.append('start','');\r\n   formData.append('end','');\r\n   formData.append('image','');\r\n   \r\n   \r\n   axios.post(\"http://localhost:5000/events/add/\", formData).then(res => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n    });\r\n\r\n\r\n    /*let options = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        method: 'POST'\r\n      };\r\n    \r\n      options.body = new FormData();\r\n      for (let key in data) {\r\n        options.body.append(key, data[key]);\r\n      }\r\n    \r\n     fetch('http://localhost:5000/events/add/', options)\r\n         \r\n    .then(res=>res.json())\r\n    .then((result)=>\r\n    {\r\n        alert(result);\r\n    },(error)=>{\r\n        alert('Failed')\r\n    })*/ \r\n    window.location.reload();\r\n}\r\nonChangeHandler=event=>{\r\n    this.setState({ [event.target.name]:event.target.value });\r\n    console.log (this.state.title)\r\n}\r\nonDrop(picture) {\r\n    this.setState({\r\n        pictures: this.state.pictures.concat(picture),\r\n    });\r\n}\r\n\r\n_handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n  }\r\n\r\n   \r\n    render() { \r\n        let {imagePreviewUrl} = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n          $imagePreview = (<img src={imagePreviewUrl} />);\r\n        }\r\n    \r\n        return ( \r\n            <div className=\"container\">\r\n            \r\n            \r\n            \r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a New Event\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             \r\n                 <Row>\r\n                     <Col sm={6}>\r\n                         <Form onSubmit={this.handleSubmit}\r\n                         onChange={this.onChangeHandler}\r\n                         >\r\n                             <Form.Group controlId=\"title\">\r\n                                 <Form.Label>Event name</Form.Label>\r\n                                 <Form.Control\r\n                                 type='text'\r\n                                 name='title'\r\n                                 required\r\n                                \r\n                                 \r\n                                 />\r\n                             </Form.Group>\r\n                             <Form.Group controlId=\"start\">\r\n                                 <Form.Label>Start date</Form.Label>\r\n                                 <Form.Control\r\n                                 type='text'\r\n                                 name='start'\r\n                                 required\r\n                                 placeholder=''\r\n                                 \r\n                                 />\r\n                             </Form.Group>\r\n                             <Form.Group controlId=\"end\">\r\n                                 <Form.Label>End date</Form.Label>\r\n                                 <Form.Control\r\n                                 type='text'\r\n                                 name='end'\r\n                                 required\r\n                                 placeholder=''\r\n                                 \r\n                                 />\r\n                             </Form.Group>\r\n                             <Form.Group controlId=\"dsc\">\r\n                                 <Form.Label>Description</Form.Label>\r\n                                 <Form.Control\r\n                                 type='text'\r\n                                 name='dsc'\r\n                                 required\r\n                                 placeholder=''\r\n                                 \r\n                                 />\r\n                             </Form.Group>\r\n                             <Form.Group controlId=\"category\">\r\n                                 <Form.Label>Category</Form.Label>\r\n                                 <Form.Control\r\n                                 type='text'\r\n                                 name='category'\r\n                                 required\r\n                                 placeholder=''\r\n                                 \r\n                                 />\r\n                             </Form.Group>\r\n                             <Form.Group controlId=\"image\">\r\n                             <img\r\n                               src={imagePreviewUrl || img}\r\n                               alt=\"Uploaded Image\"\r\n                               height='200'\r\n                                width='200'\r\n                                />\r\n                         <Form.File id=\"exampleFormControlFile1\" \r\n                         label=\"Event Image\"\r\n                         onChange={this._handleImageChange} />\r\n                         </Form.Group>\r\n                         <Form.Group>\r\n                             <Button vaiant='primary'\r\n                             type='submit'>\r\n                                 Add \r\n                             </Button>\r\n                         </Form.Group>\r\n                        \r\n                         </Form>\r\n                     </Col>\r\n                     <Col>\r\n\r\n                   \r\n                   \r\n  \r\n                     \r\n                     </Col>\r\n                 </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default RenderBody;"]},"metadata":{},"sourceType":"module"}