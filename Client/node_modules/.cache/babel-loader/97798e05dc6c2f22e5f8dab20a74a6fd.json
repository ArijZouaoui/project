{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arij\\\\projects\\\\theone\\\\src\\\\components\\\\calendar.jsx\";\nimport React, { Component } from 'react';\nimport './styling.css';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport PopUp from './popup';\nimport { faCoffee, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Dialog from 'react-bootstrap-dialog';\nimport RenderBody from './renderBody';\nimport { Button //  Dialog,\n, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\nimport { getEvents } from \"../eventData\";\nimport { getCategories } from \"../categoriesData\";\nexport default class TheCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addModalShow: false,\n      modal: false,\n      requiredItem: 0,\n      events: [],\n      categories: [],\n      event: {\n        title: 'my event',\n        start: '2020-04-01',\n        end: '2020-04-02'\n      },\n      seen: false\n    };\n\n    this.handleDateClick = arg => {// bind with an arrow function\n    };\n\n    this.handleClick = eventClickInfo => {\n      this.dialog.show({\n        // title:\" title\",\n        body: 'You want to add an event ?',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('Yes', () => {\n          this.setState({\n            addModalShow: true\n          });\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleDragStop = () => {\n      this.dialog.show({\n        // title:\" title\",\n        body: 'The date will be changed ',\n        actions: [Dialog.CancelAction(), Dialog.DefaultAction('OK', () => {\n          console.log('do stuff');\n        }, 'btn-primary')],\n        bsSize: 'small',\n        onHide: dialog => {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    };\n\n    this.changeTitle = () => {\n      let events = [...this.state.events];\n      events[0].title = new Date().toTimeString();\n      events[1].title = new Date().toTimeString();\n      this.setState({\n        events\n      });\n    };\n\n    this.handleDrop = () => {\n      let events = [...this.state.events];\n    };\n\n    this.replaceModalItem = this.replaceModalItem.bind(this);\n    this.saveModalDetails = this.saveModalDetails.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  replaceModalItem(info) {\n    this.setState({\n      requiredItem: this.state.events.indexOf(info.event)\n    });\n  }\n\n  saveModalDetails(item) {\n    const requiredItem = this.state.requiredItem;\n    let tempevents = this.state.events;\n    tempevents[requiredItem] = item;\n    this.setState({\n      events: tempevents\n    });\n  }\n\n  deleteItem(index) {\n    let tempevents = this.state.events;\n    tempevents.splice(index, 1);\n    this.setState({\n      events: tempevents\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      events: getEvents(),\n      categories: getCategories()\n    });\n  }\n\n  formatEvents() {\n    return this.state.events.map(event => {\n      const {\n        title,\n        end,\n        start\n      } = event;\n      let startTime = new Date(start);\n      let endTime = new Date(end);\n      return {\n        title,\n        start: startTime,\n        end: endTime,\n        extendedProps: { ...event\n        }\n      };\n    });\n  }\n\n  formatDate(string) {\n    var options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(string).toLocaleDateString([], options);\n  }\n\n  render() {\n    var dateFormat = require('dateformat');\n\n    let addModalClose = () => {\n      this.setState({\n        addModalShow: false\n      });\n    };\n\n    const requiredItem = this.state.requiredItem;\n    let modalData = this.state.events[requiredItem];\n\n    let handle = () => {\n      this.setState({\n        addModalShow: true\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(RenderBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(FullCalendar, {\n      dateClick: this.handleDateClick,\n      plugins: [dayGridPlugin, interactionPlugin, bootstrapPlugin],\n      editable: true,\n      selectable: true,\n      selectMirror: true // eventClick = {function(calEvent, jsEvent, view, resourceObj) {alert(calEvent.title)}}\n      // eventDragStop={this.handleDragStop}\n      ,\n      eventClick: this.changeTitle,\n      eventDrop: function (info) {\n        dateFormat.masks.hammerTime = 'HH:MM! \"Can\\'t touch this!\"';\n        alert(info.event.title + \" was dropped on \" + info.event.start.toISOString()); //  LocalDate.parse(info.event.start.toISOString(), DateTimeFormatter.ISO_OFFSET_DATE_TIME));\n      },\n      select: this.handleClick,\n      dateClick: this.handleClick,\n      events: this.formatEvents(),\n      slotWidth: 60,\n      eventColor: \"#378006\",\n      eventBackgroundColor: \"white\",\n      eventBorderColor: \"black\",\n      eventTextColor: \"red\",\n      customButtons: {\n        myCustomButton: {\n          text: 'Add new event ',\n          click: handle\n        }\n      },\n      header: {\n        right: 'prev,next today ',\n        center: 'title',\n        left: 'myCustomButton,timeGridWeek,timeGridDay,listWeek'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      className: \"modal-dialog modal-dialog-centered\",\n      ref: component => {\n        this.dialog = component;\n      },\n      OKAction: handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 18\n      }\n    }, \"hello\")), /*#__PURE__*/React.createElement(RenderBody, {\n      show: this.state.addModalShow,\n      onHide: addModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Arij/projects/theone/src/components/calendar.jsx"],"names":["React","Component","FullCalendar","dayGridPlugin","interactionPlugin","bootstrapPlugin","PopUp","faCoffee","faSearch","Dialog","RenderBody","Button","DialogActions","DialogContent","DialogContentText","DialogTitle","getEvents","getCategories","TheCalendar","constructor","props","state","addModalShow","modal","requiredItem","events","categories","event","title","start","end","seen","handleDateClick","arg","handleClick","eventClickInfo","dialog","show","body","actions","CancelAction","DefaultAction","setState","bsSize","onHide","hide","console","log","toggle","handleDragStop","changeTitle","Date","toTimeString","handleDrop","replaceModalItem","bind","saveModalDetails","info","indexOf","item","tempevents","deleteItem","index","splice","componentDidMount","formatEvents","map","startTime","endTime","extendedProps","formatDate","string","options","year","month","day","toLocaleDateString","render","dateFormat","require","addModalClose","modalData","handle","masks","hammerTime","alert","toISOString","myCustomButton","text","click","right","center","left","component"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './styling.css';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\r\nimport PopUp from './popup';\r\nimport { faCoffee, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport Dialog from 'react-bootstrap-dialog'\r\nimport RenderBody from './renderBody';\r\nimport {\r\n  Button,\r\n//  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {getEvents} from \"../eventData\";\r\nimport {getCategories} from \"../categoriesData\";\r\nexport default class TheCalendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.replaceModalItem = this.replaceModalItem.bind(this);\r\n    this.saveModalDetails = this.saveModalDetails.bind(this);\r\n    this.handleClick = this.handleClick.bind(this)\r\n    \r\n  }\r\n  state = {\r\n    addModalShow: false,\r\n    modal: false,\r\n    requiredItem: 0,\r\n    events:[],\r\n    categories:[],\r\n    event:{title: 'my event',start: '2020-04-01', end:'2020-04-02'},\r\n    seen: false\r\n  }\r\n  replaceModalItem(info) {\r\n    this.setState({\r\n      requiredItem: this.state.events.indexOf(info.event)\r\n    });\r\n  }\r\n\r\n  saveModalDetails(item) {\r\n    const requiredItem = this.state.requiredItem;\r\n    let tempevents = this.state.events;\r\n    tempevents[requiredItem] = item;\r\n    this.setState({ events: tempevents });\r\n  }\r\n\r\n  deleteItem(index) {\r\n    let tempevents = this.state.events;\r\n    tempevents.splice(index, 1);\r\n    this.setState({ events: tempevents });\r\n  }\r\n    \r\n  componentDidMount(){\r\n    this.setState({events: getEvents(), categories: getCategories()});\r\n  }\r\n\r\n    handleDateClick = (arg) => { // bind with an arrow function\r\n       \r\n      }\r\n      formatEvents() {\r\n        return this.state.events.map(event => {\r\n                  const {title, end, start} = event\r\n      \r\n                  let startTime = new Date(start)\r\n                  let endTime = new Date(end)\r\n      \r\n                  return {\r\n                    title, \r\n                    start: startTime,\r\n                    end: endTime, \r\n                    extendedProps: {...event}\r\n                  }\r\n              })\r\n      }\r\n     handleClick=(eventClickInfo)=>{\r\n        \r\n        this.dialog.show({\r\n           // title:\" title\",\r\n            body: 'You want to add an event ?',\r\n         \r\n           \r\n            actions: [\r\n              Dialog.CancelAction(),\r\n             \r\n              Dialog.DefaultAction(\r\n                'Yes',\r\n                () => {\r\n                  this.setState({addModalShow:true})},\r\n                'btn-primary'\r\n              )\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n              dialog.hide()\r\n              console.log('closed by clicking background.')\r\n            }\r\n          })\r\n\r\n      }\r\n      toggle = () => {\r\n        this.setState({ modal: !this.state.modal });\r\n      };\r\n    \r\n      handleDragStop = () => {\r\n        this.dialog.show({\r\n          // title:\" title\",\r\n           body: 'The date will be changed ',\r\n        \r\n          \r\n           actions: [\r\n             Dialog.CancelAction(),\r\n            \r\n             Dialog.DefaultAction(\r\n               'OK',\r\n               () => {\r\n                 console.log('do stuff')},\r\n               'btn-primary'\r\n             )\r\n           ],\r\n           bsSize: 'small',\r\n           onHide: (dialog) => {\r\n             dialog.hide()\r\n             console.log('closed by clicking background.')\r\n           }\r\n         })\r\n      };\r\n      // handleEventClick= ({event}) => {\r\n        // openevent is a function I wrote to open a form to edit that appointment\r\n       // this.props.openAppointment(event.extendedProps)\r\n //this.dialog.showAlert('Hello Dialog!')}\r\n \r\n  /*  handleEventDrop = (info) => {\r\n            if(window.confirm(\"Are you sure you want to change the event date?\")){\r\n                console.log('change confirmed')\r\n    \r\n                // updateAppointment is another custom method\r\n                this.props.updateAppointment({...info.event.extendedProps, start: info.event.start, end: info.event.end})\r\n    \r\n            } else {\r\n                console.log('change aborted')\r\n            }\r\n       }*/\r\n       changeTitle = () => {   \r\n        let events = [...this.state.events];\r\n        events[0].title = new Date().toTimeString();\r\n        events[1].title = new Date().toTimeString();\r\n    \r\n        this.setState({  events });\r\n      };\r\n      handleDrop=()=>{\r\n        let events = [...this.state.events];\r\n       \r\n      }\r\n      formatDate(string){\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([],options);\r\n    }\r\n      \r\n  render() {\r\n    var dateFormat = require('dateformat');\r\n    let addModalClose =()=>{\r\n      this.setState({addModalShow:false})\r\n    }\r\n    const requiredItem = this.state.requiredItem;\r\n    let modalData = this.state.events[requiredItem];\r\n    let handle =()=>{\r\n      this.setState({addModalShow:true})\r\n    }\r\n    return (\r\n    <div className='jumbotron'>\r\n      <RenderBody/>\r\n              <FullCalendar dateClick={this.handleDateClick} \r\n              plugins={[ dayGridPlugin, interactionPlugin,bootstrapPlugin ]}\r\n               \r\n                editable={true}\r\n                selectable={true}\r\n                selectMirror={true}\r\n               // eventClick = {function(calEvent, jsEvent, view, resourceObj) {alert(calEvent.title)}}\r\n               // eventDragStop={this.handleDragStop}\r\n                eventClick={this.changeTitle}\r\n                eventDrop={function(info) {\r\n                  dateFormat.masks.hammerTime = 'HH:MM! \"Can\\'t touch this!\"';\r\n                 \r\n                  alert(info.event.title + \" was dropped on \" +  info.event.start.toISOString());\r\n                //  LocalDate.parse(info.event.start.toISOString(), DateTimeFormatter.ISO_OFFSET_DATE_TIME));\r\n                 \r\n                    \r\n                  \r\n                }}\r\n                select={this.handleClick}\r\n                dateClick={this.handleClick}\r\n                events={this.formatEvents()}\r\n                slotWidth={60}\r\n                eventColor= '#378006'\r\n                eventBackgroundColor='white'\r\n                eventBorderColor=\"black\"\r\n                eventTextColor='red'\r\n                customButtons={{\r\n                  myCustomButton: {\r\n                      text: 'Add new event ',\r\n                      click:handle\r\n                      },\r\n                  }\r\n             }\r\n              header={{\r\n                  right:  'prev,next today ',\r\n                  center: 'title',\r\n                  left:'myCustomButton,timeGridWeek,timeGridDay,listWeek'\r\n              }}\r\n             \r\n                \r\n              />\r\n             \r\n              <Dialog className=\"modal-dialog modal-dialog-centered\"\r\n              \r\n              ref={(component) => { this.dialog = component }}\r\n\r\n              OKAction={handle}\r\n               >\r\n                 <Button>hello</Button>\r\n               </Dialog>\r\n                 <RenderBody\r\n                 \r\n                 show={this.state.addModalShow}\r\n                 onHide={addModalClose}/>\r\n                 \r\n                 \r\n      \r\n              \r\n              </div>\r\n\r\n\r\n)\r\n  }\r\n}\r\n\r\n    \r\n"]},"metadata":{},"sourceType":"module"}